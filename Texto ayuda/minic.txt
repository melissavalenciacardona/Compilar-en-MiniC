Grammar:

Rule 0     S' -> program
Rule 1     program -> _1_repeat
Rule 2     _1_repeat -> _1_items
Rule 3     _1_repeat -> <empty>
Rule 4     _1_items -> _1_items _1_item
Rule 5     _1_items -> _1_item
Rule 6     _1_item -> declaration
Rule 7     declaration -> statement
Rule 8     declaration -> var_declaration
Rule 9     declaration -> func_declaration
Rule 10    declaration -> class_declaration
Rule 11    class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE
Rule 12    _2_optional -> LPAREN LT IDENT RPAREN
Rule 13    _2_optional -> <empty>
Rule 14    _3_repeat -> _3_items
Rule 15    _3_repeat -> <empty>
Rule 16    _3_items -> _3_items _3_item
Rule 17    _3_items -> _3_item
Rule 18    _3_item -> function
Rule 19    func_declaration -> FUN function
Rule 20    var_declaration -> VAR IDENT _4_optional SEMI
Rule 21    _4_optional -> ASSIGN expression  [precedence=right, level=1]
Rule 22    _4_optional -> <empty>
Rule 23    statement -> CONTINUE SEMI
Rule 24    statement -> BREAK SEMI
Rule 25    statement -> format_stmt
Rule 26    statement -> block
Rule 27    statement -> while_stmt
Rule 28    statement -> return_stmt
Rule 29    statement -> print_stmt
Rule 30    statement -> if_stmt
Rule 31    statement -> for_stmt
Rule 32    statement -> expr_stmt
Rule 33    expr_stmt -> expression SEMI
Rule 34    for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
Rule 35    _5_optional -> expression
Rule 36    _5_optional -> <empty>
Rule 37    _6_optional -> expression
Rule 38    _6_optional -> <empty>
Rule 39    for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
Rule 40    _7_optional -> expression
Rule 41    _7_optional -> <empty>
Rule 42    _8_optional -> expression
Rule 43    _8_optional -> <empty>
Rule 44    for_initialize -> expr_stmt
Rule 45    for_initialize -> var_declaration
Rule 46    if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF
Rule 47    _9_optional -> expression
Rule 48    _9_optional -> <empty>
Rule 49    _10_optional -> ELSE statement  [precedence=nonassoc, level=10]
Rule 50    _10_optional -> <empty>
Rule 51    print_stmt -> PRINT LPAREN expression RPAREN SEMI
Rule 52    return_stmt -> RETURN _11_optional SEMI
Rule 53    _11_optional -> expression
Rule 54    _11_optional -> <empty>
Rule 55    while_stmt -> WHILE LPAREN expression RPAREN statement
Rule 56    block -> LBRACE _12_repeat RBRACE
Rule 57    _12_repeat -> _12_items
Rule 58    _12_repeat -> <empty>
Rule 59    _12_items -> _12_items _12_item
Rule 60    _12_items -> _12_item
Rule 61    _12_item -> declaration
Rule 62    expression -> expression DOUBLE_MINUS  [precedence=left, level=9]
Rule 63    expression -> expression DOUBLE_PLUS  [precedence=left, level=9]
Rule 64    expression -> DOUBLE_MINUS expression  [precedence=left, level=9]
Rule 65    expression -> DOUBLE_PLUS expression  [precedence=left, level=9]
Rule 66    expression -> factor
Rule 67    expression -> expression NE expression  [precedence=left, level=4]
Rule 68    expression -> expression EQ expression  [precedence=left, level=4]
Rule 69    expression -> expression GE expression  [precedence=left, level=5]
Rule 70    expression -> expression GT expression  [precedence=left, level=5]
Rule 71    expression -> expression LE expression  [precedence=left, level=5]
Rule 72    expression -> expression LT expression  [precedence=left, level=5]
Rule 73    expression -> expression MODULE expression  [precedence=left, level=7]
Rule 74    expression -> expression DIVIDE expression  [precedence=left, level=7]
Rule 75    expression -> expression TIMES expression  [precedence=left, level=7]
Rule 76    expression -> expression MINUS expression  [precedence=left, level=6]
Rule 77    expression -> expression PLUS expression  [precedence=left, level=6]
Rule 78    expression -> expression AND expression  [precedence=left, level=3]
Rule 79    expression -> expression OR expression  [precedence=left, level=2]
Rule 80    expression -> expression ASSIGN expression  [precedence=right, level=1]
Rule 81    expression -> expression MODEQ expression  [precedence=right, level=1]
Rule 82    expression -> expression DIVEQ expression  [precedence=right, level=1]
Rule 83    expression -> expression TIMESEQ expression  [precedence=right, level=1]
Rule 84    expression -> expression LESSEQ expression  [precedence=right, level=1]
Rule 85    expression -> expression ADDEQ expression  [precedence=right, level=1]
Rule 86    factor -> MFUNC LPAREN expression RPAREN SEMI
Rule 87    factor -> NOT factor  [precedence=right, level=8]
Rule 88    factor -> MINUS factor  [precedence=right, level=8]
Rule 89    factor -> LPAREN expression RPAREN
Rule 90    factor -> factor LPAREN _13_optional RPAREN
Rule 91    _13_optional -> arguments
Rule 92    _13_optional -> <empty>
Rule 93    factor -> factor POINT IDENT
Rule 94    factor -> SUPER POINT IDENT
Rule 95    factor -> IDENT
Rule 96    factor -> THIS
Rule 97    factor -> NIL
Rule 98    factor -> FALSE
Rule 99    factor -> TRUE
Rule 100   factor -> STRING
Rule 101   factor -> NUM
Rule 102   factor -> REAL
Rule 103   format_stmt -> FORMAT LPAREN expression RPAREN SEMI
Rule 104   function -> IDENT LPAREN _14_optional RPAREN block
Rule 105   _14_optional -> parameters
Rule 106   _14_optional -> <empty>
Rule 107   parameters -> IDENT _15_repeat
Rule 108   _15_repeat -> _15_items
Rule 109   _15_repeat -> <empty>
Rule 110   _15_items -> _15_items _15_item
Rule 111   _15_items -> _15_item
Rule 112   _15_item -> COMMA IDENT
Rule 113   arguments -> expression _16_repeat
Rule 114   _16_repeat -> _16_items
Rule 115   _16_repeat -> <empty>
Rule 116   _16_items -> _16_items _16_item
Rule 117   _16_items -> _16_item
Rule 118   _16_item -> COMMA expression

Unused terminals:

    ISINTEGER
    ORD
    DEG
    PHI
    EULER
    CHR
    INTEGER
    STR
    PRINTF
    CLOCK
    INPUT
    LEN
    PI
    GAMMA

Terminals, with rules where they appear:

ADDEQ                : 85
AND                  : 78
ASSIGN               : 21 80
BREAK                : 24
CHR                  : 
CLASS                : 11
CLOCK                : 
COMMA                : 112 118
CONTINUE             : 23
DEG                  : 
DIVEQ                : 82
DIVIDE               : 74
DOUBLE_MINUS         : 62 64
DOUBLE_PLUS          : 63 65
ELSE                 : 49
END_IF               : 46
EQ                   : 68
EULER                : 
FALSE                : 98
FOR                  : 34 39
FORMAT               : 103
FUN                  : 19
GAMMA                : 
GE                   : 69
GT                   : 70
IDENT                : 11 12 20 93 94 95 104 107 112
IF                   : 46
INPUT                : 
INTEGER              : 
ISINTEGER            : 
LBRACE               : 11 56
LE                   : 71
LEN                  : 
LESSEQ               : 84
LPAREN               : 12 34 39 46 51 55 86 89 90 103 104
LT                   : 12 72
MFUNC                : 86
MINUS                : 76 88
MODEQ                : 81
MODULE               : 73
NE                   : 67
NIL                  : 97
NOT                  : 87
NUM                  : 101
OR                   : 79
ORD                  : 
PHI                  : 
PI                   : 
PLUS                 : 77
POINT                : 93 94
PRINT                : 51
PRINTF               : 
RBRACE               : 11 56
REAL                 : 102
RETURN               : 52
RPAREN               : 12 34 39 46 51 55 86 89 90 103 104
SEMI                 : 20 23 24 33 34 34 39 51 52 86 103
STR                  : 
STRING               : 100
SUPER                : 94
THIS                 : 96
TIMES                : 75
TIMESEQ              : 83
TRUE                 : 99
VAR                  : 20
WHILE                : 55
error                : 

Nonterminals, with rules where they appear:

_10_optional         : 46
_11_optional         : 52
_12_item             : 59 60
_12_items            : 57 59
_12_repeat           : 56
_13_optional         : 90
_14_optional         : 104
_15_item             : 110 111
_15_items            : 108 110
_15_repeat           : 107
_16_item             : 116 117
_16_items            : 114 116
_16_repeat           : 113
_1_item              : 4 5
_1_items             : 2 4
_1_repeat            : 1
_2_optional          : 11
_3_item              : 16 17
_3_items             : 14 16
_3_repeat            : 11
_4_optional          : 20
_5_optional          : 34
_6_optional          : 34
_7_optional          : 39
_8_optional          : 39
_9_optional          : 46
arguments            : 91
block                : 26 104
class_declaration    : 10
declaration          : 6 61
expr_stmt            : 32 44
expression           : 21 33 35 37 40 42 47 51 53 55 62 63 64 65 67 67 68 68 69 69 70 70 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 78 79 79 80 80 81 81 82 82 83 83 84 84 85 85 86 89 103 113 118
factor               : 66 87 88 90 93
for_initialize       : 39
for_stmt             : 31
format_stmt          : 25
func_declaration     : 9
function             : 18 19
if_stmt              : 30
parameters           : 105
print_stmt           : 29
program              : 0
return_stmt          : 28
statement            : 7 34 39 46 49 55
var_declaration      : 8 45
while_stmt           : 27


state 0

    (0) S' -> . program
    (1) program -> . _1_repeat
    (2) _1_repeat -> . _1_items
    (3) _1_repeat -> .
    (4) _1_items -> . _1_items _1_item
    (5) _1_items -> . _1_item
    (6) _1_item -> . declaration
    (7) declaration -> . statement
    (8) declaration -> . var_declaration
    (9) declaration -> . func_declaration
    (10) declaration -> . class_declaration
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . BREAK SEMI
    (25) statement -> . format_stmt
    (26) statement -> . block
    (27) statement -> . while_stmt
    (28) statement -> . return_stmt
    (29) statement -> . print_stmt
    (30) statement -> . if_stmt
    (31) statement -> . for_stmt
    (32) statement -> . expr_stmt
    (20) var_declaration -> . VAR IDENT _4_optional SEMI
    (19) func_declaration -> . FUN function
    (11) class_declaration -> . CLASS IDENT _2_optional LBRACE _3_repeat RBRACE
    (103) format_stmt -> . FORMAT LPAREN expression RPAREN SEMI
    (56) block -> . LBRACE _12_repeat RBRACE
    (55) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (52) return_stmt -> . RETURN _11_optional SEMI
    (51) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (46) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional END_IF
    (34) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (39) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (33) expr_stmt -> . expression SEMI
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    $end            reduce using rule 3 (_1_repeat -> .)
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    VAR             shift and go to state 20
    FUN             shift and go to state 22
    CLASS           shift and go to state 23
    FORMAT          shift and go to state 25
    LBRACE          shift and go to state 24
    WHILE           shift and go to state 28
    RETURN          shift and go to state 29
    PRINT           shift and go to state 30
    IF              shift and go to state 31
    FOR             shift and go to state 32
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    program                        shift and go to state 1
    _1_repeat                      shift and go to state 2
    _1_items                       shift and go to state 3
    _1_item                        shift and go to state 4
    declaration                    shift and go to state 5
    statement                      shift and go to state 6
    var_declaration                shift and go to state 7
    func_declaration               shift and go to state 8
    class_declaration              shift and go to state 9
    format_stmt                    shift and go to state 12
    block                          shift and go to state 13
    while_stmt                     shift and go to state 14
    return_stmt                    shift and go to state 15
    print_stmt                     shift and go to state 16
    if_stmt                        shift and go to state 17
    for_stmt                       shift and go to state 18
    expr_stmt                      shift and go to state 19
    expression                     shift and go to state 27
    factor                         shift and go to state 35

state 1

    (0) S' -> program .


state 2

    (1) program -> _1_repeat .
    $end            reduce using rule 1 (program -> _1_repeat .)


state 3

    (2) _1_repeat -> _1_items .
    (4) _1_items -> _1_items . _1_item
    (6) _1_item -> . declaration
    (7) declaration -> . statement
    (8) declaration -> . var_declaration
    (9) declaration -> . func_declaration
    (10) declaration -> . class_declaration
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . BREAK SEMI
    (25) statement -> . format_stmt
    (26) statement -> . block
    (27) statement -> . while_stmt
    (28) statement -> . return_stmt
    (29) statement -> . print_stmt
    (30) statement -> . if_stmt
    (31) statement -> . for_stmt
    (32) statement -> . expr_stmt
    (20) var_declaration -> . VAR IDENT _4_optional SEMI
    (19) func_declaration -> . FUN function
    (11) class_declaration -> . CLASS IDENT _2_optional LBRACE _3_repeat RBRACE
    (103) format_stmt -> . FORMAT LPAREN expression RPAREN SEMI
    (56) block -> . LBRACE _12_repeat RBRACE
    (55) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (52) return_stmt -> . RETURN _11_optional SEMI
    (51) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (46) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional END_IF
    (34) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (39) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (33) expr_stmt -> . expression SEMI
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    $end            reduce using rule 2 (_1_repeat -> _1_items .)
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    VAR             shift and go to state 20
    FUN             shift and go to state 22
    CLASS           shift and go to state 23
    FORMAT          shift and go to state 25
    LBRACE          shift and go to state 24
    WHILE           shift and go to state 28
    RETURN          shift and go to state 29
    PRINT           shift and go to state 30
    IF              shift and go to state 31
    FOR             shift and go to state 32
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    _1_item                        shift and go to state 47
    declaration                    shift and go to state 5
    statement                      shift and go to state 6
    var_declaration                shift and go to state 7
    func_declaration               shift and go to state 8
    class_declaration              shift and go to state 9
    format_stmt                    shift and go to state 12
    block                          shift and go to state 13
    while_stmt                     shift and go to state 14
    return_stmt                    shift and go to state 15
    print_stmt                     shift and go to state 16
    if_stmt                        shift and go to state 17
    for_stmt                       shift and go to state 18
    expr_stmt                      shift and go to state 19
    expression                     shift and go to state 27
    factor                         shift and go to state 35

state 4

    (5) _1_items -> _1_item .
    CONTINUE        reduce using rule 5 (_1_items -> _1_item .)
    BREAK           reduce using rule 5 (_1_items -> _1_item .)
    VAR             reduce using rule 5 (_1_items -> _1_item .)
    FUN             reduce using rule 5 (_1_items -> _1_item .)
    CLASS           reduce using rule 5 (_1_items -> _1_item .)
    FORMAT          reduce using rule 5 (_1_items -> _1_item .)
    LBRACE          reduce using rule 5 (_1_items -> _1_item .)
    WHILE           reduce using rule 5 (_1_items -> _1_item .)
    RETURN          reduce using rule 5 (_1_items -> _1_item .)
    PRINT           reduce using rule 5 (_1_items -> _1_item .)
    IF              reduce using rule 5 (_1_items -> _1_item .)
    FOR             reduce using rule 5 (_1_items -> _1_item .)
    DOUBLE_MINUS    reduce using rule 5 (_1_items -> _1_item .)
    DOUBLE_PLUS     reduce using rule 5 (_1_items -> _1_item .)
    MFUNC           reduce using rule 5 (_1_items -> _1_item .)
    NOT             reduce using rule 5 (_1_items -> _1_item .)
    MINUS           reduce using rule 5 (_1_items -> _1_item .)
    LPAREN          reduce using rule 5 (_1_items -> _1_item .)
    SUPER           reduce using rule 5 (_1_items -> _1_item .)
    IDENT           reduce using rule 5 (_1_items -> _1_item .)
    THIS            reduce using rule 5 (_1_items -> _1_item .)
    NIL             reduce using rule 5 (_1_items -> _1_item .)
    FALSE           reduce using rule 5 (_1_items -> _1_item .)
    TRUE            reduce using rule 5 (_1_items -> _1_item .)
    STRING          reduce using rule 5 (_1_items -> _1_item .)
    NUM             reduce using rule 5 (_1_items -> _1_item .)
    REAL            reduce using rule 5 (_1_items -> _1_item .)
    $end            reduce using rule 5 (_1_items -> _1_item .)


state 5

    (6) _1_item -> declaration .
    CONTINUE        reduce using rule 6 (_1_item -> declaration .)
    BREAK           reduce using rule 6 (_1_item -> declaration .)
    VAR             reduce using rule 6 (_1_item -> declaration .)
    FUN             reduce using rule 6 (_1_item -> declaration .)
    CLASS           reduce using rule 6 (_1_item -> declaration .)
    FORMAT          reduce using rule 6 (_1_item -> declaration .)
    LBRACE          reduce using rule 6 (_1_item -> declaration .)
    WHILE           reduce using rule 6 (_1_item -> declaration .)
    RETURN          reduce using rule 6 (_1_item -> declaration .)
    PRINT           reduce using rule 6 (_1_item -> declaration .)
    IF              reduce using rule 6 (_1_item -> declaration .)
    FOR             reduce using rule 6 (_1_item -> declaration .)
    DOUBLE_MINUS    reduce using rule 6 (_1_item -> declaration .)
    DOUBLE_PLUS     reduce using rule 6 (_1_item -> declaration .)
    MFUNC           reduce using rule 6 (_1_item -> declaration .)
    NOT             reduce using rule 6 (_1_item -> declaration .)
    MINUS           reduce using rule 6 (_1_item -> declaration .)
    LPAREN          reduce using rule 6 (_1_item -> declaration .)
    SUPER           reduce using rule 6 (_1_item -> declaration .)
    IDENT           reduce using rule 6 (_1_item -> declaration .)
    THIS            reduce using rule 6 (_1_item -> declaration .)
    NIL             reduce using rule 6 (_1_item -> declaration .)
    FALSE           reduce using rule 6 (_1_item -> declaration .)
    TRUE            reduce using rule 6 (_1_item -> declaration .)
    STRING          reduce using rule 6 (_1_item -> declaration .)
    NUM             reduce using rule 6 (_1_item -> declaration .)
    REAL            reduce using rule 6 (_1_item -> declaration .)
    $end            reduce using rule 6 (_1_item -> declaration .)


state 6

    (7) declaration -> statement .
    CONTINUE        reduce using rule 7 (declaration -> statement .)
    BREAK           reduce using rule 7 (declaration -> statement .)
    VAR             reduce using rule 7 (declaration -> statement .)
    FUN             reduce using rule 7 (declaration -> statement .)
    CLASS           reduce using rule 7 (declaration -> statement .)
    FORMAT          reduce using rule 7 (declaration -> statement .)
    LBRACE          reduce using rule 7 (declaration -> statement .)
    WHILE           reduce using rule 7 (declaration -> statement .)
    RETURN          reduce using rule 7 (declaration -> statement .)
    PRINT           reduce using rule 7 (declaration -> statement .)
    IF              reduce using rule 7 (declaration -> statement .)
    FOR             reduce using rule 7 (declaration -> statement .)
    DOUBLE_MINUS    reduce using rule 7 (declaration -> statement .)
    DOUBLE_PLUS     reduce using rule 7 (declaration -> statement .)
    MFUNC           reduce using rule 7 (declaration -> statement .)
    NOT             reduce using rule 7 (declaration -> statement .)
    MINUS           reduce using rule 7 (declaration -> statement .)
    LPAREN          reduce using rule 7 (declaration -> statement .)
    SUPER           reduce using rule 7 (declaration -> statement .)
    IDENT           reduce using rule 7 (declaration -> statement .)
    THIS            reduce using rule 7 (declaration -> statement .)
    NIL             reduce using rule 7 (declaration -> statement .)
    FALSE           reduce using rule 7 (declaration -> statement .)
    TRUE            reduce using rule 7 (declaration -> statement .)
    STRING          reduce using rule 7 (declaration -> statement .)
    NUM             reduce using rule 7 (declaration -> statement .)
    REAL            reduce using rule 7 (declaration -> statement .)
    $end            reduce using rule 7 (declaration -> statement .)
    RBRACE          reduce using rule 7 (declaration -> statement .)


state 7

    (8) declaration -> var_declaration .
    CONTINUE        reduce using rule 8 (declaration -> var_declaration .)
    BREAK           reduce using rule 8 (declaration -> var_declaration .)
    VAR             reduce using rule 8 (declaration -> var_declaration .)
    FUN             reduce using rule 8 (declaration -> var_declaration .)
    CLASS           reduce using rule 8 (declaration -> var_declaration .)
    FORMAT          reduce using rule 8 (declaration -> var_declaration .)
    LBRACE          reduce using rule 8 (declaration -> var_declaration .)
    WHILE           reduce using rule 8 (declaration -> var_declaration .)
    RETURN          reduce using rule 8 (declaration -> var_declaration .)
    PRINT           reduce using rule 8 (declaration -> var_declaration .)
    IF              reduce using rule 8 (declaration -> var_declaration .)
    FOR             reduce using rule 8 (declaration -> var_declaration .)
    DOUBLE_MINUS    reduce using rule 8 (declaration -> var_declaration .)
    DOUBLE_PLUS     reduce using rule 8 (declaration -> var_declaration .)
    MFUNC           reduce using rule 8 (declaration -> var_declaration .)
    NOT             reduce using rule 8 (declaration -> var_declaration .)
    MINUS           reduce using rule 8 (declaration -> var_declaration .)
    LPAREN          reduce using rule 8 (declaration -> var_declaration .)
    SUPER           reduce using rule 8 (declaration -> var_declaration .)
    IDENT           reduce using rule 8 (declaration -> var_declaration .)
    THIS            reduce using rule 8 (declaration -> var_declaration .)
    NIL             reduce using rule 8 (declaration -> var_declaration .)
    FALSE           reduce using rule 8 (declaration -> var_declaration .)
    TRUE            reduce using rule 8 (declaration -> var_declaration .)
    STRING          reduce using rule 8 (declaration -> var_declaration .)
    NUM             reduce using rule 8 (declaration -> var_declaration .)
    REAL            reduce using rule 8 (declaration -> var_declaration .)
    $end            reduce using rule 8 (declaration -> var_declaration .)
    RBRACE          reduce using rule 8 (declaration -> var_declaration .)


state 8

    (9) declaration -> func_declaration .
    CONTINUE        reduce using rule 9 (declaration -> func_declaration .)
    BREAK           reduce using rule 9 (declaration -> func_declaration .)
    VAR             reduce using rule 9 (declaration -> func_declaration .)
    FUN             reduce using rule 9 (declaration -> func_declaration .)
    CLASS           reduce using rule 9 (declaration -> func_declaration .)
    FORMAT          reduce using rule 9 (declaration -> func_declaration .)
    LBRACE          reduce using rule 9 (declaration -> func_declaration .)
    WHILE           reduce using rule 9 (declaration -> func_declaration .)
    RETURN          reduce using rule 9 (declaration -> func_declaration .)
    PRINT           reduce using rule 9 (declaration -> func_declaration .)
    IF              reduce using rule 9 (declaration -> func_declaration .)
    FOR             reduce using rule 9 (declaration -> func_declaration .)
    DOUBLE_MINUS    reduce using rule 9 (declaration -> func_declaration .)
    DOUBLE_PLUS     reduce using rule 9 (declaration -> func_declaration .)
    MFUNC           reduce using rule 9 (declaration -> func_declaration .)
    NOT             reduce using rule 9 (declaration -> func_declaration .)
    MINUS           reduce using rule 9 (declaration -> func_declaration .)
    LPAREN          reduce using rule 9 (declaration -> func_declaration .)
    SUPER           reduce using rule 9 (declaration -> func_declaration .)
    IDENT           reduce using rule 9 (declaration -> func_declaration .)
    THIS            reduce using rule 9 (declaration -> func_declaration .)
    NIL             reduce using rule 9 (declaration -> func_declaration .)
    FALSE           reduce using rule 9 (declaration -> func_declaration .)
    TRUE            reduce using rule 9 (declaration -> func_declaration .)
    STRING          reduce using rule 9 (declaration -> func_declaration .)
    NUM             reduce using rule 9 (declaration -> func_declaration .)
    REAL            reduce using rule 9 (declaration -> func_declaration .)
    $end            reduce using rule 9 (declaration -> func_declaration .)
    RBRACE          reduce using rule 9 (declaration -> func_declaration .)


state 9

    (10) declaration -> class_declaration .
    CONTINUE        reduce using rule 10 (declaration -> class_declaration .)
    BREAK           reduce using rule 10 (declaration -> class_declaration .)
    VAR             reduce using rule 10 (declaration -> class_declaration .)
    FUN             reduce using rule 10 (declaration -> class_declaration .)
    CLASS           reduce using rule 10 (declaration -> class_declaration .)
    FORMAT          reduce using rule 10 (declaration -> class_declaration .)
    LBRACE          reduce using rule 10 (declaration -> class_declaration .)
    WHILE           reduce using rule 10 (declaration -> class_declaration .)
    RETURN          reduce using rule 10 (declaration -> class_declaration .)
    PRINT           reduce using rule 10 (declaration -> class_declaration .)
    IF              reduce using rule 10 (declaration -> class_declaration .)
    FOR             reduce using rule 10 (declaration -> class_declaration .)
    DOUBLE_MINUS    reduce using rule 10 (declaration -> class_declaration .)
    DOUBLE_PLUS     reduce using rule 10 (declaration -> class_declaration .)
    MFUNC           reduce using rule 10 (declaration -> class_declaration .)
    NOT             reduce using rule 10 (declaration -> class_declaration .)
    MINUS           reduce using rule 10 (declaration -> class_declaration .)
    LPAREN          reduce using rule 10 (declaration -> class_declaration .)
    SUPER           reduce using rule 10 (declaration -> class_declaration .)
    IDENT           reduce using rule 10 (declaration -> class_declaration .)
    THIS            reduce using rule 10 (declaration -> class_declaration .)
    NIL             reduce using rule 10 (declaration -> class_declaration .)
    FALSE           reduce using rule 10 (declaration -> class_declaration .)
    TRUE            reduce using rule 10 (declaration -> class_declaration .)
    STRING          reduce using rule 10 (declaration -> class_declaration .)
    NUM             reduce using rule 10 (declaration -> class_declaration .)
    REAL            reduce using rule 10 (declaration -> class_declaration .)
    $end            reduce using rule 10 (declaration -> class_declaration .)
    RBRACE          reduce using rule 10 (declaration -> class_declaration .)


state 10

    (23) statement -> CONTINUE . SEMI
    SEMI            shift and go to state 48


state 11

    (24) statement -> BREAK . SEMI
    SEMI            shift and go to state 49


state 12

    (25) statement -> format_stmt .
    CONTINUE        reduce using rule 25 (statement -> format_stmt .)
    BREAK           reduce using rule 25 (statement -> format_stmt .)
    VAR             reduce using rule 25 (statement -> format_stmt .)
    FUN             reduce using rule 25 (statement -> format_stmt .)
    CLASS           reduce using rule 25 (statement -> format_stmt .)
    FORMAT          reduce using rule 25 (statement -> format_stmt .)
    LBRACE          reduce using rule 25 (statement -> format_stmt .)
    WHILE           reduce using rule 25 (statement -> format_stmt .)
    RETURN          reduce using rule 25 (statement -> format_stmt .)
    PRINT           reduce using rule 25 (statement -> format_stmt .)
    IF              reduce using rule 25 (statement -> format_stmt .)
    FOR             reduce using rule 25 (statement -> format_stmt .)
    DOUBLE_MINUS    reduce using rule 25 (statement -> format_stmt .)
    DOUBLE_PLUS     reduce using rule 25 (statement -> format_stmt .)
    MFUNC           reduce using rule 25 (statement -> format_stmt .)
    NOT             reduce using rule 25 (statement -> format_stmt .)
    MINUS           reduce using rule 25 (statement -> format_stmt .)
    LPAREN          reduce using rule 25 (statement -> format_stmt .)
    SUPER           reduce using rule 25 (statement -> format_stmt .)
    IDENT           reduce using rule 25 (statement -> format_stmt .)
    THIS            reduce using rule 25 (statement -> format_stmt .)
    NIL             reduce using rule 25 (statement -> format_stmt .)
    FALSE           reduce using rule 25 (statement -> format_stmt .)
    TRUE            reduce using rule 25 (statement -> format_stmt .)
    STRING          reduce using rule 25 (statement -> format_stmt .)
    NUM             reduce using rule 25 (statement -> format_stmt .)
    REAL            reduce using rule 25 (statement -> format_stmt .)
    $end            reduce using rule 25 (statement -> format_stmt .)
    RBRACE          reduce using rule 25 (statement -> format_stmt .)
    ELSE            reduce using rule 25 (statement -> format_stmt .)
    END_IF          reduce using rule 25 (statement -> format_stmt .)


state 13

    (26) statement -> block .
    CONTINUE        reduce using rule 26 (statement -> block .)
    BREAK           reduce using rule 26 (statement -> block .)
    VAR             reduce using rule 26 (statement -> block .)
    FUN             reduce using rule 26 (statement -> block .)
    CLASS           reduce using rule 26 (statement -> block .)
    FORMAT          reduce using rule 26 (statement -> block .)
    LBRACE          reduce using rule 26 (statement -> block .)
    WHILE           reduce using rule 26 (statement -> block .)
    RETURN          reduce using rule 26 (statement -> block .)
    PRINT           reduce using rule 26 (statement -> block .)
    IF              reduce using rule 26 (statement -> block .)
    FOR             reduce using rule 26 (statement -> block .)
    DOUBLE_MINUS    reduce using rule 26 (statement -> block .)
    DOUBLE_PLUS     reduce using rule 26 (statement -> block .)
    MFUNC           reduce using rule 26 (statement -> block .)
    NOT             reduce using rule 26 (statement -> block .)
    MINUS           reduce using rule 26 (statement -> block .)
    LPAREN          reduce using rule 26 (statement -> block .)
    SUPER           reduce using rule 26 (statement -> block .)
    IDENT           reduce using rule 26 (statement -> block .)
    THIS            reduce using rule 26 (statement -> block .)
    NIL             reduce using rule 26 (statement -> block .)
    FALSE           reduce using rule 26 (statement -> block .)
    TRUE            reduce using rule 26 (statement -> block .)
    STRING          reduce using rule 26 (statement -> block .)
    NUM             reduce using rule 26 (statement -> block .)
    REAL            reduce using rule 26 (statement -> block .)
    $end            reduce using rule 26 (statement -> block .)
    RBRACE          reduce using rule 26 (statement -> block .)
    ELSE            reduce using rule 26 (statement -> block .)
    END_IF          reduce using rule 26 (statement -> block .)


state 14

    (27) statement -> while_stmt .
    CONTINUE        reduce using rule 27 (statement -> while_stmt .)
    BREAK           reduce using rule 27 (statement -> while_stmt .)
    VAR             reduce using rule 27 (statement -> while_stmt .)
    FUN             reduce using rule 27 (statement -> while_stmt .)
    CLASS           reduce using rule 27 (statement -> while_stmt .)
    FORMAT          reduce using rule 27 (statement -> while_stmt .)
    LBRACE          reduce using rule 27 (statement -> while_stmt .)
    WHILE           reduce using rule 27 (statement -> while_stmt .)
    RETURN          reduce using rule 27 (statement -> while_stmt .)
    PRINT           reduce using rule 27 (statement -> while_stmt .)
    IF              reduce using rule 27 (statement -> while_stmt .)
    FOR             reduce using rule 27 (statement -> while_stmt .)
    DOUBLE_MINUS    reduce using rule 27 (statement -> while_stmt .)
    DOUBLE_PLUS     reduce using rule 27 (statement -> while_stmt .)
    MFUNC           reduce using rule 27 (statement -> while_stmt .)
    NOT             reduce using rule 27 (statement -> while_stmt .)
    MINUS           reduce using rule 27 (statement -> while_stmt .)
    LPAREN          reduce using rule 27 (statement -> while_stmt .)
    SUPER           reduce using rule 27 (statement -> while_stmt .)
    IDENT           reduce using rule 27 (statement -> while_stmt .)
    THIS            reduce using rule 27 (statement -> while_stmt .)
    NIL             reduce using rule 27 (statement -> while_stmt .)
    FALSE           reduce using rule 27 (statement -> while_stmt .)
    TRUE            reduce using rule 27 (statement -> while_stmt .)
    STRING          reduce using rule 27 (statement -> while_stmt .)
    NUM             reduce using rule 27 (statement -> while_stmt .)
    REAL            reduce using rule 27 (statement -> while_stmt .)
    $end            reduce using rule 27 (statement -> while_stmt .)
    RBRACE          reduce using rule 27 (statement -> while_stmt .)
    ELSE            reduce using rule 27 (statement -> while_stmt .)
    END_IF          reduce using rule 27 (statement -> while_stmt .)


state 15

    (28) statement -> return_stmt .
    CONTINUE        reduce using rule 28 (statement -> return_stmt .)
    BREAK           reduce using rule 28 (statement -> return_stmt .)
    VAR             reduce using rule 28 (statement -> return_stmt .)
    FUN             reduce using rule 28 (statement -> return_stmt .)
    CLASS           reduce using rule 28 (statement -> return_stmt .)
    FORMAT          reduce using rule 28 (statement -> return_stmt .)
    LBRACE          reduce using rule 28 (statement -> return_stmt .)
    WHILE           reduce using rule 28 (statement -> return_stmt .)
    RETURN          reduce using rule 28 (statement -> return_stmt .)
    PRINT           reduce using rule 28 (statement -> return_stmt .)
    IF              reduce using rule 28 (statement -> return_stmt .)
    FOR             reduce using rule 28 (statement -> return_stmt .)
    DOUBLE_MINUS    reduce using rule 28 (statement -> return_stmt .)
    DOUBLE_PLUS     reduce using rule 28 (statement -> return_stmt .)
    MFUNC           reduce using rule 28 (statement -> return_stmt .)
    NOT             reduce using rule 28 (statement -> return_stmt .)
    MINUS           reduce using rule 28 (statement -> return_stmt .)
    LPAREN          reduce using rule 28 (statement -> return_stmt .)
    SUPER           reduce using rule 28 (statement -> return_stmt .)
    IDENT           reduce using rule 28 (statement -> return_stmt .)
    THIS            reduce using rule 28 (statement -> return_stmt .)
    NIL             reduce using rule 28 (statement -> return_stmt .)
    FALSE           reduce using rule 28 (statement -> return_stmt .)
    TRUE            reduce using rule 28 (statement -> return_stmt .)
    STRING          reduce using rule 28 (statement -> return_stmt .)
    NUM             reduce using rule 28 (statement -> return_stmt .)
    REAL            reduce using rule 28 (statement -> return_stmt .)
    $end            reduce using rule 28 (statement -> return_stmt .)
    RBRACE          reduce using rule 28 (statement -> return_stmt .)
    ELSE            reduce using rule 28 (statement -> return_stmt .)
    END_IF          reduce using rule 28 (statement -> return_stmt .)


state 16

    (29) statement -> print_stmt .
    CONTINUE        reduce using rule 29 (statement -> print_stmt .)
    BREAK           reduce using rule 29 (statement -> print_stmt .)
    VAR             reduce using rule 29 (statement -> print_stmt .)
    FUN             reduce using rule 29 (statement -> print_stmt .)
    CLASS           reduce using rule 29 (statement -> print_stmt .)
    FORMAT          reduce using rule 29 (statement -> print_stmt .)
    LBRACE          reduce using rule 29 (statement -> print_stmt .)
    WHILE           reduce using rule 29 (statement -> print_stmt .)
    RETURN          reduce using rule 29 (statement -> print_stmt .)
    PRINT           reduce using rule 29 (statement -> print_stmt .)
    IF              reduce using rule 29 (statement -> print_stmt .)
    FOR             reduce using rule 29 (statement -> print_stmt .)
    DOUBLE_MINUS    reduce using rule 29 (statement -> print_stmt .)
    DOUBLE_PLUS     reduce using rule 29 (statement -> print_stmt .)
    MFUNC           reduce using rule 29 (statement -> print_stmt .)
    NOT             reduce using rule 29 (statement -> print_stmt .)
    MINUS           reduce using rule 29 (statement -> print_stmt .)
    LPAREN          reduce using rule 29 (statement -> print_stmt .)
    SUPER           reduce using rule 29 (statement -> print_stmt .)
    IDENT           reduce using rule 29 (statement -> print_stmt .)
    THIS            reduce using rule 29 (statement -> print_stmt .)
    NIL             reduce using rule 29 (statement -> print_stmt .)
    FALSE           reduce using rule 29 (statement -> print_stmt .)
    TRUE            reduce using rule 29 (statement -> print_stmt .)
    STRING          reduce using rule 29 (statement -> print_stmt .)
    NUM             reduce using rule 29 (statement -> print_stmt .)
    REAL            reduce using rule 29 (statement -> print_stmt .)
    $end            reduce using rule 29 (statement -> print_stmt .)
    RBRACE          reduce using rule 29 (statement -> print_stmt .)
    ELSE            reduce using rule 29 (statement -> print_stmt .)
    END_IF          reduce using rule 29 (statement -> print_stmt .)


state 17

    (30) statement -> if_stmt .
    CONTINUE        reduce using rule 30 (statement -> if_stmt .)
    BREAK           reduce using rule 30 (statement -> if_stmt .)
    VAR             reduce using rule 30 (statement -> if_stmt .)
    FUN             reduce using rule 30 (statement -> if_stmt .)
    CLASS           reduce using rule 30 (statement -> if_stmt .)
    FORMAT          reduce using rule 30 (statement -> if_stmt .)
    LBRACE          reduce using rule 30 (statement -> if_stmt .)
    WHILE           reduce using rule 30 (statement -> if_stmt .)
    RETURN          reduce using rule 30 (statement -> if_stmt .)
    PRINT           reduce using rule 30 (statement -> if_stmt .)
    IF              reduce using rule 30 (statement -> if_stmt .)
    FOR             reduce using rule 30 (statement -> if_stmt .)
    DOUBLE_MINUS    reduce using rule 30 (statement -> if_stmt .)
    DOUBLE_PLUS     reduce using rule 30 (statement -> if_stmt .)
    MFUNC           reduce using rule 30 (statement -> if_stmt .)
    NOT             reduce using rule 30 (statement -> if_stmt .)
    MINUS           reduce using rule 30 (statement -> if_stmt .)
    LPAREN          reduce using rule 30 (statement -> if_stmt .)
    SUPER           reduce using rule 30 (statement -> if_stmt .)
    IDENT           reduce using rule 30 (statement -> if_stmt .)
    THIS            reduce using rule 30 (statement -> if_stmt .)
    NIL             reduce using rule 30 (statement -> if_stmt .)
    FALSE           reduce using rule 30 (statement -> if_stmt .)
    TRUE            reduce using rule 30 (statement -> if_stmt .)
    STRING          reduce using rule 30 (statement -> if_stmt .)
    NUM             reduce using rule 30 (statement -> if_stmt .)
    REAL            reduce using rule 30 (statement -> if_stmt .)
    $end            reduce using rule 30 (statement -> if_stmt .)
    RBRACE          reduce using rule 30 (statement -> if_stmt .)
    ELSE            reduce using rule 30 (statement -> if_stmt .)
    END_IF          reduce using rule 30 (statement -> if_stmt .)


state 18

    (31) statement -> for_stmt .
    CONTINUE        reduce using rule 31 (statement -> for_stmt .)
    BREAK           reduce using rule 31 (statement -> for_stmt .)
    VAR             reduce using rule 31 (statement -> for_stmt .)
    FUN             reduce using rule 31 (statement -> for_stmt .)
    CLASS           reduce using rule 31 (statement -> for_stmt .)
    FORMAT          reduce using rule 31 (statement -> for_stmt .)
    LBRACE          reduce using rule 31 (statement -> for_stmt .)
    WHILE           reduce using rule 31 (statement -> for_stmt .)
    RETURN          reduce using rule 31 (statement -> for_stmt .)
    PRINT           reduce using rule 31 (statement -> for_stmt .)
    IF              reduce using rule 31 (statement -> for_stmt .)
    FOR             reduce using rule 31 (statement -> for_stmt .)
    DOUBLE_MINUS    reduce using rule 31 (statement -> for_stmt .)
    DOUBLE_PLUS     reduce using rule 31 (statement -> for_stmt .)
    MFUNC           reduce using rule 31 (statement -> for_stmt .)
    NOT             reduce using rule 31 (statement -> for_stmt .)
    MINUS           reduce using rule 31 (statement -> for_stmt .)
    LPAREN          reduce using rule 31 (statement -> for_stmt .)
    SUPER           reduce using rule 31 (statement -> for_stmt .)
    IDENT           reduce using rule 31 (statement -> for_stmt .)
    THIS            reduce using rule 31 (statement -> for_stmt .)
    NIL             reduce using rule 31 (statement -> for_stmt .)
    FALSE           reduce using rule 31 (statement -> for_stmt .)
    TRUE            reduce using rule 31 (statement -> for_stmt .)
    STRING          reduce using rule 31 (statement -> for_stmt .)
    NUM             reduce using rule 31 (statement -> for_stmt .)
    REAL            reduce using rule 31 (statement -> for_stmt .)
    $end            reduce using rule 31 (statement -> for_stmt .)
    RBRACE          reduce using rule 31 (statement -> for_stmt .)
    ELSE            reduce using rule 31 (statement -> for_stmt .)
    END_IF          reduce using rule 31 (statement -> for_stmt .)


state 19

    (32) statement -> expr_stmt .
    CONTINUE        reduce using rule 32 (statement -> expr_stmt .)
    BREAK           reduce using rule 32 (statement -> expr_stmt .)
    VAR             reduce using rule 32 (statement -> expr_stmt .)
    FUN             reduce using rule 32 (statement -> expr_stmt .)
    CLASS           reduce using rule 32 (statement -> expr_stmt .)
    FORMAT          reduce using rule 32 (statement -> expr_stmt .)
    LBRACE          reduce using rule 32 (statement -> expr_stmt .)
    WHILE           reduce using rule 32 (statement -> expr_stmt .)
    RETURN          reduce using rule 32 (statement -> expr_stmt .)
    PRINT           reduce using rule 32 (statement -> expr_stmt .)
    IF              reduce using rule 32 (statement -> expr_stmt .)
    FOR             reduce using rule 32 (statement -> expr_stmt .)
    DOUBLE_MINUS    reduce using rule 32 (statement -> expr_stmt .)
    DOUBLE_PLUS     reduce using rule 32 (statement -> expr_stmt .)
    MFUNC           reduce using rule 32 (statement -> expr_stmt .)
    NOT             reduce using rule 32 (statement -> expr_stmt .)
    MINUS           reduce using rule 32 (statement -> expr_stmt .)
    LPAREN          reduce using rule 32 (statement -> expr_stmt .)
    SUPER           reduce using rule 32 (statement -> expr_stmt .)
    IDENT           reduce using rule 32 (statement -> expr_stmt .)
    THIS            reduce using rule 32 (statement -> expr_stmt .)
    NIL             reduce using rule 32 (statement -> expr_stmt .)
    FALSE           reduce using rule 32 (statement -> expr_stmt .)
    TRUE            reduce using rule 32 (statement -> expr_stmt .)
    STRING          reduce using rule 32 (statement -> expr_stmt .)
    NUM             reduce using rule 32 (statement -> expr_stmt .)
    REAL            reduce using rule 32 (statement -> expr_stmt .)
    $end            reduce using rule 32 (statement -> expr_stmt .)
    RBRACE          reduce using rule 32 (statement -> expr_stmt .)
    ELSE            reduce using rule 32 (statement -> expr_stmt .)
    END_IF          reduce using rule 32 (statement -> expr_stmt .)


state 20

    (20) var_declaration -> VAR . IDENT _4_optional SEMI
    IDENT           shift and go to state 50


state 21

    (95) factor -> IDENT .
    LPAREN          reduce using rule 95 (factor -> IDENT .)
    POINT           reduce using rule 95 (factor -> IDENT .)
    SEMI            reduce using rule 95 (factor -> IDENT .)
    DOUBLE_MINUS    reduce using rule 95 (factor -> IDENT .)
    DOUBLE_PLUS     reduce using rule 95 (factor -> IDENT .)
    NE              reduce using rule 95 (factor -> IDENT .)
    EQ              reduce using rule 95 (factor -> IDENT .)
    GE              reduce using rule 95 (factor -> IDENT .)
    GT              reduce using rule 95 (factor -> IDENT .)
    LE              reduce using rule 95 (factor -> IDENT .)
    LT              reduce using rule 95 (factor -> IDENT .)
    MODULE          reduce using rule 95 (factor -> IDENT .)
    DIVIDE          reduce using rule 95 (factor -> IDENT .)
    TIMES           reduce using rule 95 (factor -> IDENT .)
    MINUS           reduce using rule 95 (factor -> IDENT .)
    PLUS            reduce using rule 95 (factor -> IDENT .)
    AND             reduce using rule 95 (factor -> IDENT .)
    OR              reduce using rule 95 (factor -> IDENT .)
    ASSIGN          reduce using rule 95 (factor -> IDENT .)
    MODEQ           reduce using rule 95 (factor -> IDENT .)
    DIVEQ           reduce using rule 95 (factor -> IDENT .)
    TIMESEQ         reduce using rule 95 (factor -> IDENT .)
    LESSEQ          reduce using rule 95 (factor -> IDENT .)
    ADDEQ           reduce using rule 95 (factor -> IDENT .)
    RPAREN          reduce using rule 95 (factor -> IDENT .)
    COMMA           reduce using rule 95 (factor -> IDENT .)


state 22

    (19) func_declaration -> FUN . function
    (104) function -> . IDENT LPAREN _14_optional RPAREN block
    IDENT           shift and go to state 52

    function                       shift and go to state 51

state 23

    (11) class_declaration -> CLASS . IDENT _2_optional LBRACE _3_repeat RBRACE
    IDENT           shift and go to state 53


state 24

    (56) block -> LBRACE . _12_repeat RBRACE
    (57) _12_repeat -> . _12_items
    (58) _12_repeat -> .
    (59) _12_items -> . _12_items _12_item
    (60) _12_items -> . _12_item
    (61) _12_item -> . declaration
    (7) declaration -> . statement
    (8) declaration -> . var_declaration
    (9) declaration -> . func_declaration
    (10) declaration -> . class_declaration
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . BREAK SEMI
    (25) statement -> . format_stmt
    (26) statement -> . block
    (27) statement -> . while_stmt
    (28) statement -> . return_stmt
    (29) statement -> . print_stmt
    (30) statement -> . if_stmt
    (31) statement -> . for_stmt
    (32) statement -> . expr_stmt
    (20) var_declaration -> . VAR IDENT _4_optional SEMI
    (19) func_declaration -> . FUN function
    (11) class_declaration -> . CLASS IDENT _2_optional LBRACE _3_repeat RBRACE
    (103) format_stmt -> . FORMAT LPAREN expression RPAREN SEMI
    (56) block -> . LBRACE _12_repeat RBRACE
    (55) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (52) return_stmt -> . RETURN _11_optional SEMI
    (51) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (46) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional END_IF
    (34) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (39) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (33) expr_stmt -> . expression SEMI
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    RBRACE          reduce using rule 58 (_12_repeat -> .)
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    VAR             shift and go to state 20
    FUN             shift and go to state 22
    CLASS           shift and go to state 23
    FORMAT          shift and go to state 25
    LBRACE          shift and go to state 24
    WHILE           shift and go to state 28
    RETURN          shift and go to state 29
    PRINT           shift and go to state 30
    IF              shift and go to state 31
    FOR             shift and go to state 32
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    _12_repeat                     shift and go to state 54
    _12_items                      shift and go to state 55
    _12_item                       shift and go to state 56
    declaration                    shift and go to state 57
    statement                      shift and go to state 6
    var_declaration                shift and go to state 7
    func_declaration               shift and go to state 8
    class_declaration              shift and go to state 9
    format_stmt                    shift and go to state 12
    block                          shift and go to state 13
    while_stmt                     shift and go to state 14
    return_stmt                    shift and go to state 15
    print_stmt                     shift and go to state 16
    if_stmt                        shift and go to state 17
    for_stmt                       shift and go to state 18
    expr_stmt                      shift and go to state 19
    expression                     shift and go to state 27
    factor                         shift and go to state 35

state 25

    (103) format_stmt -> FORMAT . LPAREN expression RPAREN SEMI
    LPAREN          shift and go to state 58


state 26

    (89) factor -> LPAREN . expression RPAREN
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 59
    factor                         shift and go to state 35

state 27

    (33) expr_stmt -> expression . SEMI
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            shift and go to state 60
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 28

    (55) while_stmt -> WHILE . LPAREN expression RPAREN statement
    LPAREN          shift and go to state 82


state 29

    (52) return_stmt -> RETURN . _11_optional SEMI
    (53) _11_optional -> . expression
    (54) _11_optional -> .
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    SEMI            reduce using rule 54 (_11_optional -> .)
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    _11_optional                   shift and go to state 83
    expression                     shift and go to state 84
    factor                         shift and go to state 35

state 30

    (51) print_stmt -> PRINT . LPAREN expression RPAREN SEMI
    LPAREN          shift and go to state 85


state 31

    (46) if_stmt -> IF . LPAREN _9_optional RPAREN statement _10_optional END_IF
    LPAREN          shift and go to state 86


state 32

    (34) for_stmt -> FOR . LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (39) for_stmt -> FOR . LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    LPAREN          shift and go to state 87


state 33

    (64) expression -> DOUBLE_MINUS . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 88
    factor                         shift and go to state 35

state 34

    (65) expression -> DOUBLE_PLUS . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 89
    factor                         shift and go to state 35

state 35

    (66) expression -> factor .
    (90) factor -> factor . LPAREN _13_optional RPAREN
    (93) factor -> factor . POINT IDENT
    SEMI            reduce using rule 66 (expression -> factor .)
    DOUBLE_MINUS    reduce using rule 66 (expression -> factor .)
    DOUBLE_PLUS     reduce using rule 66 (expression -> factor .)
    NE              reduce using rule 66 (expression -> factor .)
    EQ              reduce using rule 66 (expression -> factor .)
    GE              reduce using rule 66 (expression -> factor .)
    GT              reduce using rule 66 (expression -> factor .)
    LE              reduce using rule 66 (expression -> factor .)
    LT              reduce using rule 66 (expression -> factor .)
    MODULE          reduce using rule 66 (expression -> factor .)
    DIVIDE          reduce using rule 66 (expression -> factor .)
    TIMES           reduce using rule 66 (expression -> factor .)
    MINUS           reduce using rule 66 (expression -> factor .)
    PLUS            reduce using rule 66 (expression -> factor .)
    AND             reduce using rule 66 (expression -> factor .)
    OR              reduce using rule 66 (expression -> factor .)
    ASSIGN          reduce using rule 66 (expression -> factor .)
    MODEQ           reduce using rule 66 (expression -> factor .)
    DIVEQ           reduce using rule 66 (expression -> factor .)
    TIMESEQ         reduce using rule 66 (expression -> factor .)
    LESSEQ          reduce using rule 66 (expression -> factor .)
    ADDEQ           reduce using rule 66 (expression -> factor .)
    RPAREN          reduce using rule 66 (expression -> factor .)
    COMMA           reduce using rule 66 (expression -> factor .)
    LPAREN          shift and go to state 90
    POINT           shift and go to state 91


state 36

    (88) factor -> MINUS . factor
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    factor                         shift and go to state 92

state 37

    (86) factor -> MFUNC . LPAREN expression RPAREN SEMI
    LPAREN          shift and go to state 93


state 38

    (87) factor -> NOT . factor
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    factor                         shift and go to state 94

state 39

    (94) factor -> SUPER . POINT IDENT
    POINT           shift and go to state 95


state 40

    (96) factor -> THIS .
    LPAREN          reduce using rule 96 (factor -> THIS .)
    POINT           reduce using rule 96 (factor -> THIS .)
    SEMI            reduce using rule 96 (factor -> THIS .)
    DOUBLE_MINUS    reduce using rule 96 (factor -> THIS .)
    DOUBLE_PLUS     reduce using rule 96 (factor -> THIS .)
    NE              reduce using rule 96 (factor -> THIS .)
    EQ              reduce using rule 96 (factor -> THIS .)
    GE              reduce using rule 96 (factor -> THIS .)
    GT              reduce using rule 96 (factor -> THIS .)
    LE              reduce using rule 96 (factor -> THIS .)
    LT              reduce using rule 96 (factor -> THIS .)
    MODULE          reduce using rule 96 (factor -> THIS .)
    DIVIDE          reduce using rule 96 (factor -> THIS .)
    TIMES           reduce using rule 96 (factor -> THIS .)
    MINUS           reduce using rule 96 (factor -> THIS .)
    PLUS            reduce using rule 96 (factor -> THIS .)
    AND             reduce using rule 96 (factor -> THIS .)
    OR              reduce using rule 96 (factor -> THIS .)
    ASSIGN          reduce using rule 96 (factor -> THIS .)
    MODEQ           reduce using rule 96 (factor -> THIS .)
    DIVEQ           reduce using rule 96 (factor -> THIS .)
    TIMESEQ         reduce using rule 96 (factor -> THIS .)
    LESSEQ          reduce using rule 96 (factor -> THIS .)
    ADDEQ           reduce using rule 96 (factor -> THIS .)
    RPAREN          reduce using rule 96 (factor -> THIS .)
    COMMA           reduce using rule 96 (factor -> THIS .)


state 41

    (97) factor -> NIL .
    LPAREN          reduce using rule 97 (factor -> NIL .)
    POINT           reduce using rule 97 (factor -> NIL .)
    SEMI            reduce using rule 97 (factor -> NIL .)
    DOUBLE_MINUS    reduce using rule 97 (factor -> NIL .)
    DOUBLE_PLUS     reduce using rule 97 (factor -> NIL .)
    NE              reduce using rule 97 (factor -> NIL .)
    EQ              reduce using rule 97 (factor -> NIL .)
    GE              reduce using rule 97 (factor -> NIL .)
    GT              reduce using rule 97 (factor -> NIL .)
    LE              reduce using rule 97 (factor -> NIL .)
    LT              reduce using rule 97 (factor -> NIL .)
    MODULE          reduce using rule 97 (factor -> NIL .)
    DIVIDE          reduce using rule 97 (factor -> NIL .)
    TIMES           reduce using rule 97 (factor -> NIL .)
    MINUS           reduce using rule 97 (factor -> NIL .)
    PLUS            reduce using rule 97 (factor -> NIL .)
    AND             reduce using rule 97 (factor -> NIL .)
    OR              reduce using rule 97 (factor -> NIL .)
    ASSIGN          reduce using rule 97 (factor -> NIL .)
    MODEQ           reduce using rule 97 (factor -> NIL .)
    DIVEQ           reduce using rule 97 (factor -> NIL .)
    TIMESEQ         reduce using rule 97 (factor -> NIL .)
    LESSEQ          reduce using rule 97 (factor -> NIL .)
    ADDEQ           reduce using rule 97 (factor -> NIL .)
    RPAREN          reduce using rule 97 (factor -> NIL .)
    COMMA           reduce using rule 97 (factor -> NIL .)


state 42

    (98) factor -> FALSE .
    LPAREN          reduce using rule 98 (factor -> FALSE .)
    POINT           reduce using rule 98 (factor -> FALSE .)
    SEMI            reduce using rule 98 (factor -> FALSE .)
    DOUBLE_MINUS    reduce using rule 98 (factor -> FALSE .)
    DOUBLE_PLUS     reduce using rule 98 (factor -> FALSE .)
    NE              reduce using rule 98 (factor -> FALSE .)
    EQ              reduce using rule 98 (factor -> FALSE .)
    GE              reduce using rule 98 (factor -> FALSE .)
    GT              reduce using rule 98 (factor -> FALSE .)
    LE              reduce using rule 98 (factor -> FALSE .)
    LT              reduce using rule 98 (factor -> FALSE .)
    MODULE          reduce using rule 98 (factor -> FALSE .)
    DIVIDE          reduce using rule 98 (factor -> FALSE .)
    TIMES           reduce using rule 98 (factor -> FALSE .)
    MINUS           reduce using rule 98 (factor -> FALSE .)
    PLUS            reduce using rule 98 (factor -> FALSE .)
    AND             reduce using rule 98 (factor -> FALSE .)
    OR              reduce using rule 98 (factor -> FALSE .)
    ASSIGN          reduce using rule 98 (factor -> FALSE .)
    MODEQ           reduce using rule 98 (factor -> FALSE .)
    DIVEQ           reduce using rule 98 (factor -> FALSE .)
    TIMESEQ         reduce using rule 98 (factor -> FALSE .)
    LESSEQ          reduce using rule 98 (factor -> FALSE .)
    ADDEQ           reduce using rule 98 (factor -> FALSE .)
    RPAREN          reduce using rule 98 (factor -> FALSE .)
    COMMA           reduce using rule 98 (factor -> FALSE .)


state 43

    (99) factor -> TRUE .
    LPAREN          reduce using rule 99 (factor -> TRUE .)
    POINT           reduce using rule 99 (factor -> TRUE .)
    SEMI            reduce using rule 99 (factor -> TRUE .)
    DOUBLE_MINUS    reduce using rule 99 (factor -> TRUE .)
    DOUBLE_PLUS     reduce using rule 99 (factor -> TRUE .)
    NE              reduce using rule 99 (factor -> TRUE .)
    EQ              reduce using rule 99 (factor -> TRUE .)
    GE              reduce using rule 99 (factor -> TRUE .)
    GT              reduce using rule 99 (factor -> TRUE .)
    LE              reduce using rule 99 (factor -> TRUE .)
    LT              reduce using rule 99 (factor -> TRUE .)
    MODULE          reduce using rule 99 (factor -> TRUE .)
    DIVIDE          reduce using rule 99 (factor -> TRUE .)
    TIMES           reduce using rule 99 (factor -> TRUE .)
    MINUS           reduce using rule 99 (factor -> TRUE .)
    PLUS            reduce using rule 99 (factor -> TRUE .)
    AND             reduce using rule 99 (factor -> TRUE .)
    OR              reduce using rule 99 (factor -> TRUE .)
    ASSIGN          reduce using rule 99 (factor -> TRUE .)
    MODEQ           reduce using rule 99 (factor -> TRUE .)
    DIVEQ           reduce using rule 99 (factor -> TRUE .)
    TIMESEQ         reduce using rule 99 (factor -> TRUE .)
    LESSEQ          reduce using rule 99 (factor -> TRUE .)
    ADDEQ           reduce using rule 99 (factor -> TRUE .)
    RPAREN          reduce using rule 99 (factor -> TRUE .)
    COMMA           reduce using rule 99 (factor -> TRUE .)


state 44

    (100) factor -> STRING .
    LPAREN          reduce using rule 100 (factor -> STRING .)
    POINT           reduce using rule 100 (factor -> STRING .)
    SEMI            reduce using rule 100 (factor -> STRING .)
    DOUBLE_MINUS    reduce using rule 100 (factor -> STRING .)
    DOUBLE_PLUS     reduce using rule 100 (factor -> STRING .)
    NE              reduce using rule 100 (factor -> STRING .)
    EQ              reduce using rule 100 (factor -> STRING .)
    GE              reduce using rule 100 (factor -> STRING .)
    GT              reduce using rule 100 (factor -> STRING .)
    LE              reduce using rule 100 (factor -> STRING .)
    LT              reduce using rule 100 (factor -> STRING .)
    MODULE          reduce using rule 100 (factor -> STRING .)
    DIVIDE          reduce using rule 100 (factor -> STRING .)
    TIMES           reduce using rule 100 (factor -> STRING .)
    MINUS           reduce using rule 100 (factor -> STRING .)
    PLUS            reduce using rule 100 (factor -> STRING .)
    AND             reduce using rule 100 (factor -> STRING .)
    OR              reduce using rule 100 (factor -> STRING .)
    ASSIGN          reduce using rule 100 (factor -> STRING .)
    MODEQ           reduce using rule 100 (factor -> STRING .)
    DIVEQ           reduce using rule 100 (factor -> STRING .)
    TIMESEQ         reduce using rule 100 (factor -> STRING .)
    LESSEQ          reduce using rule 100 (factor -> STRING .)
    ADDEQ           reduce using rule 100 (factor -> STRING .)
    RPAREN          reduce using rule 100 (factor -> STRING .)
    COMMA           reduce using rule 100 (factor -> STRING .)


state 45

    (101) factor -> NUM .
    LPAREN          reduce using rule 101 (factor -> NUM .)
    POINT           reduce using rule 101 (factor -> NUM .)
    SEMI            reduce using rule 101 (factor -> NUM .)
    DOUBLE_MINUS    reduce using rule 101 (factor -> NUM .)
    DOUBLE_PLUS     reduce using rule 101 (factor -> NUM .)
    NE              reduce using rule 101 (factor -> NUM .)
    EQ              reduce using rule 101 (factor -> NUM .)
    GE              reduce using rule 101 (factor -> NUM .)
    GT              reduce using rule 101 (factor -> NUM .)
    LE              reduce using rule 101 (factor -> NUM .)
    LT              reduce using rule 101 (factor -> NUM .)
    MODULE          reduce using rule 101 (factor -> NUM .)
    DIVIDE          reduce using rule 101 (factor -> NUM .)
    TIMES           reduce using rule 101 (factor -> NUM .)
    MINUS           reduce using rule 101 (factor -> NUM .)
    PLUS            reduce using rule 101 (factor -> NUM .)
    AND             reduce using rule 101 (factor -> NUM .)
    OR              reduce using rule 101 (factor -> NUM .)
    ASSIGN          reduce using rule 101 (factor -> NUM .)
    MODEQ           reduce using rule 101 (factor -> NUM .)
    DIVEQ           reduce using rule 101 (factor -> NUM .)
    TIMESEQ         reduce using rule 101 (factor -> NUM .)
    LESSEQ          reduce using rule 101 (factor -> NUM .)
    ADDEQ           reduce using rule 101 (factor -> NUM .)
    RPAREN          reduce using rule 101 (factor -> NUM .)
    COMMA           reduce using rule 101 (factor -> NUM .)


state 46

    (102) factor -> REAL .
    LPAREN          reduce using rule 102 (factor -> REAL .)
    POINT           reduce using rule 102 (factor -> REAL .)
    SEMI            reduce using rule 102 (factor -> REAL .)
    DOUBLE_MINUS    reduce using rule 102 (factor -> REAL .)
    DOUBLE_PLUS     reduce using rule 102 (factor -> REAL .)
    NE              reduce using rule 102 (factor -> REAL .)
    EQ              reduce using rule 102 (factor -> REAL .)
    GE              reduce using rule 102 (factor -> REAL .)
    GT              reduce using rule 102 (factor -> REAL .)
    LE              reduce using rule 102 (factor -> REAL .)
    LT              reduce using rule 102 (factor -> REAL .)
    MODULE          reduce using rule 102 (factor -> REAL .)
    DIVIDE          reduce using rule 102 (factor -> REAL .)
    TIMES           reduce using rule 102 (factor -> REAL .)
    MINUS           reduce using rule 102 (factor -> REAL .)
    PLUS            reduce using rule 102 (factor -> REAL .)
    AND             reduce using rule 102 (factor -> REAL .)
    OR              reduce using rule 102 (factor -> REAL .)
    ASSIGN          reduce using rule 102 (factor -> REAL .)
    MODEQ           reduce using rule 102 (factor -> REAL .)
    DIVEQ           reduce using rule 102 (factor -> REAL .)
    TIMESEQ         reduce using rule 102 (factor -> REAL .)
    LESSEQ          reduce using rule 102 (factor -> REAL .)
    ADDEQ           reduce using rule 102 (factor -> REAL .)
    RPAREN          reduce using rule 102 (factor -> REAL .)
    COMMA           reduce using rule 102 (factor -> REAL .)


state 47

    (4) _1_items -> _1_items _1_item .
    CONTINUE        reduce using rule 4 (_1_items -> _1_items _1_item .)
    BREAK           reduce using rule 4 (_1_items -> _1_items _1_item .)
    VAR             reduce using rule 4 (_1_items -> _1_items _1_item .)
    FUN             reduce using rule 4 (_1_items -> _1_items _1_item .)
    CLASS           reduce using rule 4 (_1_items -> _1_items _1_item .)
    FORMAT          reduce using rule 4 (_1_items -> _1_items _1_item .)
    LBRACE          reduce using rule 4 (_1_items -> _1_items _1_item .)
    WHILE           reduce using rule 4 (_1_items -> _1_items _1_item .)
    RETURN          reduce using rule 4 (_1_items -> _1_items _1_item .)
    PRINT           reduce using rule 4 (_1_items -> _1_items _1_item .)
    IF              reduce using rule 4 (_1_items -> _1_items _1_item .)
    FOR             reduce using rule 4 (_1_items -> _1_items _1_item .)
    DOUBLE_MINUS    reduce using rule 4 (_1_items -> _1_items _1_item .)
    DOUBLE_PLUS     reduce using rule 4 (_1_items -> _1_items _1_item .)
    MFUNC           reduce using rule 4 (_1_items -> _1_items _1_item .)
    NOT             reduce using rule 4 (_1_items -> _1_items _1_item .)
    MINUS           reduce using rule 4 (_1_items -> _1_items _1_item .)
    LPAREN          reduce using rule 4 (_1_items -> _1_items _1_item .)
    SUPER           reduce using rule 4 (_1_items -> _1_items _1_item .)
    IDENT           reduce using rule 4 (_1_items -> _1_items _1_item .)
    THIS            reduce using rule 4 (_1_items -> _1_items _1_item .)
    NIL             reduce using rule 4 (_1_items -> _1_items _1_item .)
    FALSE           reduce using rule 4 (_1_items -> _1_items _1_item .)
    TRUE            reduce using rule 4 (_1_items -> _1_items _1_item .)
    STRING          reduce using rule 4 (_1_items -> _1_items _1_item .)
    NUM             reduce using rule 4 (_1_items -> _1_items _1_item .)
    REAL            reduce using rule 4 (_1_items -> _1_items _1_item .)
    $end            reduce using rule 4 (_1_items -> _1_items _1_item .)


state 48

    (23) statement -> CONTINUE SEMI .
    CONTINUE        reduce using rule 23 (statement -> CONTINUE SEMI .)
    BREAK           reduce using rule 23 (statement -> CONTINUE SEMI .)
    VAR             reduce using rule 23 (statement -> CONTINUE SEMI .)
    FUN             reduce using rule 23 (statement -> CONTINUE SEMI .)
    CLASS           reduce using rule 23 (statement -> CONTINUE SEMI .)
    FORMAT          reduce using rule 23 (statement -> CONTINUE SEMI .)
    LBRACE          reduce using rule 23 (statement -> CONTINUE SEMI .)
    WHILE           reduce using rule 23 (statement -> CONTINUE SEMI .)
    RETURN          reduce using rule 23 (statement -> CONTINUE SEMI .)
    PRINT           reduce using rule 23 (statement -> CONTINUE SEMI .)
    IF              reduce using rule 23 (statement -> CONTINUE SEMI .)
    FOR             reduce using rule 23 (statement -> CONTINUE SEMI .)
    DOUBLE_MINUS    reduce using rule 23 (statement -> CONTINUE SEMI .)
    DOUBLE_PLUS     reduce using rule 23 (statement -> CONTINUE SEMI .)
    MFUNC           reduce using rule 23 (statement -> CONTINUE SEMI .)
    NOT             reduce using rule 23 (statement -> CONTINUE SEMI .)
    MINUS           reduce using rule 23 (statement -> CONTINUE SEMI .)
    LPAREN          reduce using rule 23 (statement -> CONTINUE SEMI .)
    SUPER           reduce using rule 23 (statement -> CONTINUE SEMI .)
    IDENT           reduce using rule 23 (statement -> CONTINUE SEMI .)
    THIS            reduce using rule 23 (statement -> CONTINUE SEMI .)
    NIL             reduce using rule 23 (statement -> CONTINUE SEMI .)
    FALSE           reduce using rule 23 (statement -> CONTINUE SEMI .)
    TRUE            reduce using rule 23 (statement -> CONTINUE SEMI .)
    STRING          reduce using rule 23 (statement -> CONTINUE SEMI .)
    NUM             reduce using rule 23 (statement -> CONTINUE SEMI .)
    REAL            reduce using rule 23 (statement -> CONTINUE SEMI .)
    $end            reduce using rule 23 (statement -> CONTINUE SEMI .)
    RBRACE          reduce using rule 23 (statement -> CONTINUE SEMI .)
    ELSE            reduce using rule 23 (statement -> CONTINUE SEMI .)
    END_IF          reduce using rule 23 (statement -> CONTINUE SEMI .)


state 49

    (24) statement -> BREAK SEMI .
    CONTINUE        reduce using rule 24 (statement -> BREAK SEMI .)
    BREAK           reduce using rule 24 (statement -> BREAK SEMI .)
    VAR             reduce using rule 24 (statement -> BREAK SEMI .)
    FUN             reduce using rule 24 (statement -> BREAK SEMI .)
    CLASS           reduce using rule 24 (statement -> BREAK SEMI .)
    FORMAT          reduce using rule 24 (statement -> BREAK SEMI .)
    LBRACE          reduce using rule 24 (statement -> BREAK SEMI .)
    WHILE           reduce using rule 24 (statement -> BREAK SEMI .)
    RETURN          reduce using rule 24 (statement -> BREAK SEMI .)
    PRINT           reduce using rule 24 (statement -> BREAK SEMI .)
    IF              reduce using rule 24 (statement -> BREAK SEMI .)
    FOR             reduce using rule 24 (statement -> BREAK SEMI .)
    DOUBLE_MINUS    reduce using rule 24 (statement -> BREAK SEMI .)
    DOUBLE_PLUS     reduce using rule 24 (statement -> BREAK SEMI .)
    MFUNC           reduce using rule 24 (statement -> BREAK SEMI .)
    NOT             reduce using rule 24 (statement -> BREAK SEMI .)
    MINUS           reduce using rule 24 (statement -> BREAK SEMI .)
    LPAREN          reduce using rule 24 (statement -> BREAK SEMI .)
    SUPER           reduce using rule 24 (statement -> BREAK SEMI .)
    IDENT           reduce using rule 24 (statement -> BREAK SEMI .)
    THIS            reduce using rule 24 (statement -> BREAK SEMI .)
    NIL             reduce using rule 24 (statement -> BREAK SEMI .)
    FALSE           reduce using rule 24 (statement -> BREAK SEMI .)
    TRUE            reduce using rule 24 (statement -> BREAK SEMI .)
    STRING          reduce using rule 24 (statement -> BREAK SEMI .)
    NUM             reduce using rule 24 (statement -> BREAK SEMI .)
    REAL            reduce using rule 24 (statement -> BREAK SEMI .)
    $end            reduce using rule 24 (statement -> BREAK SEMI .)
    RBRACE          reduce using rule 24 (statement -> BREAK SEMI .)
    ELSE            reduce using rule 24 (statement -> BREAK SEMI .)
    END_IF          reduce using rule 24 (statement -> BREAK SEMI .)


state 50

    (20) var_declaration -> VAR IDENT . _4_optional SEMI
    (21) _4_optional -> . ASSIGN expression
    (22) _4_optional -> .
    ASSIGN          shift and go to state 97
    SEMI            reduce using rule 22 (_4_optional -> .)

    _4_optional                    shift and go to state 96

state 51

    (19) func_declaration -> FUN function .
    CONTINUE        reduce using rule 19 (func_declaration -> FUN function .)
    BREAK           reduce using rule 19 (func_declaration -> FUN function .)
    VAR             reduce using rule 19 (func_declaration -> FUN function .)
    FUN             reduce using rule 19 (func_declaration -> FUN function .)
    CLASS           reduce using rule 19 (func_declaration -> FUN function .)
    FORMAT          reduce using rule 19 (func_declaration -> FUN function .)
    LBRACE          reduce using rule 19 (func_declaration -> FUN function .)
    WHILE           reduce using rule 19 (func_declaration -> FUN function .)
    RETURN          reduce using rule 19 (func_declaration -> FUN function .)
    PRINT           reduce using rule 19 (func_declaration -> FUN function .)
    IF              reduce using rule 19 (func_declaration -> FUN function .)
    FOR             reduce using rule 19 (func_declaration -> FUN function .)
    DOUBLE_MINUS    reduce using rule 19 (func_declaration -> FUN function .)
    DOUBLE_PLUS     reduce using rule 19 (func_declaration -> FUN function .)
    MFUNC           reduce using rule 19 (func_declaration -> FUN function .)
    NOT             reduce using rule 19 (func_declaration -> FUN function .)
    MINUS           reduce using rule 19 (func_declaration -> FUN function .)
    LPAREN          reduce using rule 19 (func_declaration -> FUN function .)
    SUPER           reduce using rule 19 (func_declaration -> FUN function .)
    IDENT           reduce using rule 19 (func_declaration -> FUN function .)
    THIS            reduce using rule 19 (func_declaration -> FUN function .)
    NIL             reduce using rule 19 (func_declaration -> FUN function .)
    FALSE           reduce using rule 19 (func_declaration -> FUN function .)
    TRUE            reduce using rule 19 (func_declaration -> FUN function .)
    STRING          reduce using rule 19 (func_declaration -> FUN function .)
    NUM             reduce using rule 19 (func_declaration -> FUN function .)
    REAL            reduce using rule 19 (func_declaration -> FUN function .)
    $end            reduce using rule 19 (func_declaration -> FUN function .)
    RBRACE          reduce using rule 19 (func_declaration -> FUN function .)


state 52

    (104) function -> IDENT . LPAREN _14_optional RPAREN block
    LPAREN          shift and go to state 98


state 53

    (11) class_declaration -> CLASS IDENT . _2_optional LBRACE _3_repeat RBRACE
    (12) _2_optional -> . LPAREN LT IDENT RPAREN
    (13) _2_optional -> .
    LPAREN          shift and go to state 100
    LBRACE          reduce using rule 13 (_2_optional -> .)

    _2_optional                    shift and go to state 99

state 54

    (56) block -> LBRACE _12_repeat . RBRACE
    RBRACE          shift and go to state 101


state 55

    (57) _12_repeat -> _12_items .
    (59) _12_items -> _12_items . _12_item
    (61) _12_item -> . declaration
    (7) declaration -> . statement
    (8) declaration -> . var_declaration
    (9) declaration -> . func_declaration
    (10) declaration -> . class_declaration
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . BREAK SEMI
    (25) statement -> . format_stmt
    (26) statement -> . block
    (27) statement -> . while_stmt
    (28) statement -> . return_stmt
    (29) statement -> . print_stmt
    (30) statement -> . if_stmt
    (31) statement -> . for_stmt
    (32) statement -> . expr_stmt
    (20) var_declaration -> . VAR IDENT _4_optional SEMI
    (19) func_declaration -> . FUN function
    (11) class_declaration -> . CLASS IDENT _2_optional LBRACE _3_repeat RBRACE
    (103) format_stmt -> . FORMAT LPAREN expression RPAREN SEMI
    (56) block -> . LBRACE _12_repeat RBRACE
    (55) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (52) return_stmt -> . RETURN _11_optional SEMI
    (51) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (46) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional END_IF
    (34) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (39) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (33) expr_stmt -> . expression SEMI
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    RBRACE          reduce using rule 57 (_12_repeat -> _12_items .)
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    VAR             shift and go to state 20
    FUN             shift and go to state 22
    CLASS           shift and go to state 23
    FORMAT          shift and go to state 25
    LBRACE          shift and go to state 24
    WHILE           shift and go to state 28
    RETURN          shift and go to state 29
    PRINT           shift and go to state 30
    IF              shift and go to state 31
    FOR             shift and go to state 32
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    _12_item                       shift and go to state 102
    declaration                    shift and go to state 57
    statement                      shift and go to state 6
    var_declaration                shift and go to state 7
    func_declaration               shift and go to state 8
    class_declaration              shift and go to state 9
    format_stmt                    shift and go to state 12
    block                          shift and go to state 13
    while_stmt                     shift and go to state 14
    return_stmt                    shift and go to state 15
    print_stmt                     shift and go to state 16
    if_stmt                        shift and go to state 17
    for_stmt                       shift and go to state 18
    expr_stmt                      shift and go to state 19
    expression                     shift and go to state 27
    factor                         shift and go to state 35

state 56

    (60) _12_items -> _12_item .
    CONTINUE        reduce using rule 60 (_12_items -> _12_item .)
    BREAK           reduce using rule 60 (_12_items -> _12_item .)
    VAR             reduce using rule 60 (_12_items -> _12_item .)
    FUN             reduce using rule 60 (_12_items -> _12_item .)
    CLASS           reduce using rule 60 (_12_items -> _12_item .)
    FORMAT          reduce using rule 60 (_12_items -> _12_item .)
    LBRACE          reduce using rule 60 (_12_items -> _12_item .)
    WHILE           reduce using rule 60 (_12_items -> _12_item .)
    RETURN          reduce using rule 60 (_12_items -> _12_item .)
    PRINT           reduce using rule 60 (_12_items -> _12_item .)
    IF              reduce using rule 60 (_12_items -> _12_item .)
    FOR             reduce using rule 60 (_12_items -> _12_item .)
    DOUBLE_MINUS    reduce using rule 60 (_12_items -> _12_item .)
    DOUBLE_PLUS     reduce using rule 60 (_12_items -> _12_item .)
    MFUNC           reduce using rule 60 (_12_items -> _12_item .)
    NOT             reduce using rule 60 (_12_items -> _12_item .)
    MINUS           reduce using rule 60 (_12_items -> _12_item .)
    LPAREN          reduce using rule 60 (_12_items -> _12_item .)
    SUPER           reduce using rule 60 (_12_items -> _12_item .)
    IDENT           reduce using rule 60 (_12_items -> _12_item .)
    THIS            reduce using rule 60 (_12_items -> _12_item .)
    NIL             reduce using rule 60 (_12_items -> _12_item .)
    FALSE           reduce using rule 60 (_12_items -> _12_item .)
    TRUE            reduce using rule 60 (_12_items -> _12_item .)
    STRING          reduce using rule 60 (_12_items -> _12_item .)
    NUM             reduce using rule 60 (_12_items -> _12_item .)
    REAL            reduce using rule 60 (_12_items -> _12_item .)
    RBRACE          reduce using rule 60 (_12_items -> _12_item .)


state 57

    (61) _12_item -> declaration .
    CONTINUE        reduce using rule 61 (_12_item -> declaration .)
    BREAK           reduce using rule 61 (_12_item -> declaration .)
    VAR             reduce using rule 61 (_12_item -> declaration .)
    FUN             reduce using rule 61 (_12_item -> declaration .)
    CLASS           reduce using rule 61 (_12_item -> declaration .)
    FORMAT          reduce using rule 61 (_12_item -> declaration .)
    LBRACE          reduce using rule 61 (_12_item -> declaration .)
    WHILE           reduce using rule 61 (_12_item -> declaration .)
    RETURN          reduce using rule 61 (_12_item -> declaration .)
    PRINT           reduce using rule 61 (_12_item -> declaration .)
    IF              reduce using rule 61 (_12_item -> declaration .)
    FOR             reduce using rule 61 (_12_item -> declaration .)
    DOUBLE_MINUS    reduce using rule 61 (_12_item -> declaration .)
    DOUBLE_PLUS     reduce using rule 61 (_12_item -> declaration .)
    MFUNC           reduce using rule 61 (_12_item -> declaration .)
    NOT             reduce using rule 61 (_12_item -> declaration .)
    MINUS           reduce using rule 61 (_12_item -> declaration .)
    LPAREN          reduce using rule 61 (_12_item -> declaration .)
    SUPER           reduce using rule 61 (_12_item -> declaration .)
    IDENT           reduce using rule 61 (_12_item -> declaration .)
    THIS            reduce using rule 61 (_12_item -> declaration .)
    NIL             reduce using rule 61 (_12_item -> declaration .)
    FALSE           reduce using rule 61 (_12_item -> declaration .)
    TRUE            reduce using rule 61 (_12_item -> declaration .)
    STRING          reduce using rule 61 (_12_item -> declaration .)
    NUM             reduce using rule 61 (_12_item -> declaration .)
    REAL            reduce using rule 61 (_12_item -> declaration .)
    RBRACE          reduce using rule 61 (_12_item -> declaration .)


state 58

    (103) format_stmt -> FORMAT LPAREN . expression RPAREN SEMI
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 103
    factor                         shift and go to state 35

state 59

    (89) factor -> LPAREN expression . RPAREN
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    RPAREN          shift and go to state 104
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 60

    (33) expr_stmt -> expression SEMI .
    CONTINUE        reduce using rule 33 (expr_stmt -> expression SEMI .)
    BREAK           reduce using rule 33 (expr_stmt -> expression SEMI .)
    VAR             reduce using rule 33 (expr_stmt -> expression SEMI .)
    FUN             reduce using rule 33 (expr_stmt -> expression SEMI .)
    CLASS           reduce using rule 33 (expr_stmt -> expression SEMI .)
    FORMAT          reduce using rule 33 (expr_stmt -> expression SEMI .)
    LBRACE          reduce using rule 33 (expr_stmt -> expression SEMI .)
    WHILE           reduce using rule 33 (expr_stmt -> expression SEMI .)
    RETURN          reduce using rule 33 (expr_stmt -> expression SEMI .)
    PRINT           reduce using rule 33 (expr_stmt -> expression SEMI .)
    IF              reduce using rule 33 (expr_stmt -> expression SEMI .)
    FOR             reduce using rule 33 (expr_stmt -> expression SEMI .)
    DOUBLE_MINUS    reduce using rule 33 (expr_stmt -> expression SEMI .)
    DOUBLE_PLUS     reduce using rule 33 (expr_stmt -> expression SEMI .)
    MFUNC           reduce using rule 33 (expr_stmt -> expression SEMI .)
    NOT             reduce using rule 33 (expr_stmt -> expression SEMI .)
    MINUS           reduce using rule 33 (expr_stmt -> expression SEMI .)
    LPAREN          reduce using rule 33 (expr_stmt -> expression SEMI .)
    SUPER           reduce using rule 33 (expr_stmt -> expression SEMI .)
    IDENT           reduce using rule 33 (expr_stmt -> expression SEMI .)
    THIS            reduce using rule 33 (expr_stmt -> expression SEMI .)
    NIL             reduce using rule 33 (expr_stmt -> expression SEMI .)
    FALSE           reduce using rule 33 (expr_stmt -> expression SEMI .)
    TRUE            reduce using rule 33 (expr_stmt -> expression SEMI .)
    STRING          reduce using rule 33 (expr_stmt -> expression SEMI .)
    NUM             reduce using rule 33 (expr_stmt -> expression SEMI .)
    REAL            reduce using rule 33 (expr_stmt -> expression SEMI .)
    $end            reduce using rule 33 (expr_stmt -> expression SEMI .)
    RBRACE          reduce using rule 33 (expr_stmt -> expression SEMI .)
    SEMI            reduce using rule 33 (expr_stmt -> expression SEMI .)
    ELSE            reduce using rule 33 (expr_stmt -> expression SEMI .)
    END_IF          reduce using rule 33 (expr_stmt -> expression SEMI .)


state 61

    (62) expression -> expression DOUBLE_MINUS .
    SEMI            reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    DOUBLE_MINUS    reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    DOUBLE_PLUS     reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    NE              reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    EQ              reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    GE              reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    GT              reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    LE              reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    LT              reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    MODULE          reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    DIVIDE          reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    TIMES           reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    MINUS           reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    PLUS            reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    AND             reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    OR              reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    ASSIGN          reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    MODEQ           reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    DIVEQ           reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    TIMESEQ         reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    LESSEQ          reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    ADDEQ           reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    RPAREN          reduce using rule 62 (expression -> expression DOUBLE_MINUS .)
    COMMA           reduce using rule 62 (expression -> expression DOUBLE_MINUS .)


state 62

    (63) expression -> expression DOUBLE_PLUS .
    SEMI            reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    DOUBLE_MINUS    reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    DOUBLE_PLUS     reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    NE              reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    EQ              reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    GE              reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    GT              reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    LE              reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    LT              reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    MODULE          reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    DIVIDE          reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    TIMES           reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    MINUS           reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    PLUS            reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    AND             reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    OR              reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    ASSIGN          reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    MODEQ           reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    DIVEQ           reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    TIMESEQ         reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    LESSEQ          reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    ADDEQ           reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    RPAREN          reduce using rule 63 (expression -> expression DOUBLE_PLUS .)
    COMMA           reduce using rule 63 (expression -> expression DOUBLE_PLUS .)


state 63

    (67) expression -> expression NE . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 105
    factor                         shift and go to state 35

state 64

    (68) expression -> expression EQ . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 106
    factor                         shift and go to state 35

state 65

    (69) expression -> expression GE . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 107
    factor                         shift and go to state 35

state 66

    (70) expression -> expression GT . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 108
    factor                         shift and go to state 35

state 67

    (71) expression -> expression LE . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 109
    factor                         shift and go to state 35

state 68

    (72) expression -> expression LT . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 110
    factor                         shift and go to state 35

state 69

    (73) expression -> expression MODULE . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 111
    factor                         shift and go to state 35

state 70

    (74) expression -> expression DIVIDE . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 112
    factor                         shift and go to state 35

state 71

    (75) expression -> expression TIMES . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 113
    factor                         shift and go to state 35

state 72

    (76) expression -> expression MINUS . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 114
    factor                         shift and go to state 35

state 73

    (77) expression -> expression PLUS . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 115
    factor                         shift and go to state 35

state 74

    (78) expression -> expression AND . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 116
    factor                         shift and go to state 35

state 75

    (79) expression -> expression OR . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 117
    factor                         shift and go to state 35

state 76

    (80) expression -> expression ASSIGN . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 118
    factor                         shift and go to state 35

state 77

    (81) expression -> expression MODEQ . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 119
    factor                         shift and go to state 35

state 78

    (82) expression -> expression DIVEQ . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 120
    factor                         shift and go to state 35

state 79

    (83) expression -> expression TIMESEQ . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 121
    factor                         shift and go to state 35

state 80

    (84) expression -> expression LESSEQ . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 122
    factor                         shift and go to state 35

state 81

    (85) expression -> expression ADDEQ . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 123
    factor                         shift and go to state 35

state 82

    (55) while_stmt -> WHILE LPAREN . expression RPAREN statement
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 124
    factor                         shift and go to state 35

state 83

    (52) return_stmt -> RETURN _11_optional . SEMI
    SEMI            shift and go to state 125


state 84

    (53) _11_optional -> expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 53 (_11_optional -> expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 85

    (51) print_stmt -> PRINT LPAREN . expression RPAREN SEMI
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 126
    factor                         shift and go to state 35

state 86

    (46) if_stmt -> IF LPAREN . _9_optional RPAREN statement _10_optional END_IF
    (47) _9_optional -> . expression
    (48) _9_optional -> .
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    RPAREN          reduce using rule 48 (_9_optional -> .)
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    _9_optional                    shift and go to state 127
    expression                     shift and go to state 128
    factor                         shift and go to state 35

state 87

    (34) for_stmt -> FOR LPAREN . SEMI _5_optional SEMI _6_optional RPAREN statement
    (39) for_stmt -> FOR LPAREN . for_initialize _7_optional SEMI _8_optional RPAREN statement
    (44) for_initialize -> . expr_stmt
    (45) for_initialize -> . var_declaration
    (33) expr_stmt -> . expression SEMI
    (20) var_declaration -> . VAR IDENT _4_optional SEMI
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    SEMI            shift and go to state 129
    VAR             shift and go to state 20
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    for_initialize                 shift and go to state 130
    expr_stmt                      shift and go to state 131
    var_declaration                shift and go to state 132
    expression                     shift and go to state 27
    factor                         shift and go to state 35

state 88

    (64) expression -> DOUBLE_MINUS expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    DOUBLE_MINUS    reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    DOUBLE_PLUS     reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    NE              reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    EQ              reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    GE              reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    GT              reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    LE              reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    LT              reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    MODULE          reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    DIVIDE          reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    TIMES           reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    MINUS           reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    PLUS            reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    AND             reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    OR              reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    ASSIGN          reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    MODEQ           reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    DIVEQ           reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    TIMESEQ         reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    LESSEQ          reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    ADDEQ           reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    RPAREN          reduce using rule 64 (expression -> DOUBLE_MINUS expression .)
    COMMA           reduce using rule 64 (expression -> DOUBLE_MINUS expression .)


state 89

    (65) expression -> DOUBLE_PLUS expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    DOUBLE_MINUS    reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    DOUBLE_PLUS     reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    NE              reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    EQ              reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    GE              reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    GT              reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    LE              reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    LT              reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    MODULE          reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    DIVIDE          reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    TIMES           reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    MINUS           reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    PLUS            reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    AND             reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    OR              reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    ASSIGN          reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    MODEQ           reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    DIVEQ           reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    TIMESEQ         reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    LESSEQ          reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    ADDEQ           reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    RPAREN          reduce using rule 65 (expression -> DOUBLE_PLUS expression .)
    COMMA           reduce using rule 65 (expression -> DOUBLE_PLUS expression .)


state 90

    (90) factor -> factor LPAREN . _13_optional RPAREN
    (91) _13_optional -> . arguments
    (92) _13_optional -> .
    (113) arguments -> . expression _16_repeat
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    RPAREN          reduce using rule 92 (_13_optional -> .)
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    factor                         shift and go to state 35
    _13_optional                   shift and go to state 133
    arguments                      shift and go to state 134
    expression                     shift and go to state 135

state 91

    (93) factor -> factor POINT . IDENT
    IDENT           shift and go to state 136


state 92

    (88) factor -> MINUS factor .
    (90) factor -> factor . LPAREN _13_optional RPAREN
    (93) factor -> factor . POINT IDENT
    LPAREN          reduce using rule 88 (factor -> MINUS factor .)
    POINT           reduce using rule 88 (factor -> MINUS factor .)
    SEMI            reduce using rule 88 (factor -> MINUS factor .)
    DOUBLE_MINUS    reduce using rule 88 (factor -> MINUS factor .)
    DOUBLE_PLUS     reduce using rule 88 (factor -> MINUS factor .)
    NE              reduce using rule 88 (factor -> MINUS factor .)
    EQ              reduce using rule 88 (factor -> MINUS factor .)
    GE              reduce using rule 88 (factor -> MINUS factor .)
    GT              reduce using rule 88 (factor -> MINUS factor .)
    LE              reduce using rule 88 (factor -> MINUS factor .)
    LT              reduce using rule 88 (factor -> MINUS factor .)
    MODULE          reduce using rule 88 (factor -> MINUS factor .)
    DIVIDE          reduce using rule 88 (factor -> MINUS factor .)
    TIMES           reduce using rule 88 (factor -> MINUS factor .)
    MINUS           reduce using rule 88 (factor -> MINUS factor .)
    PLUS            reduce using rule 88 (factor -> MINUS factor .)
    AND             reduce using rule 88 (factor -> MINUS factor .)
    OR              reduce using rule 88 (factor -> MINUS factor .)
    ASSIGN          reduce using rule 88 (factor -> MINUS factor .)
    MODEQ           reduce using rule 88 (factor -> MINUS factor .)
    DIVEQ           reduce using rule 88 (factor -> MINUS factor .)
    TIMESEQ         reduce using rule 88 (factor -> MINUS factor .)
    LESSEQ          reduce using rule 88 (factor -> MINUS factor .)
    ADDEQ           reduce using rule 88 (factor -> MINUS factor .)
    RPAREN          reduce using rule 88 (factor -> MINUS factor .)
    COMMA           reduce using rule 88 (factor -> MINUS factor .)


state 93

    (86) factor -> MFUNC LPAREN . expression RPAREN SEMI
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 137
    factor                         shift and go to state 35

state 94

    (87) factor -> NOT factor .
    (90) factor -> factor . LPAREN _13_optional RPAREN
    (93) factor -> factor . POINT IDENT
    LPAREN          reduce using rule 87 (factor -> NOT factor .)
    POINT           reduce using rule 87 (factor -> NOT factor .)
    SEMI            reduce using rule 87 (factor -> NOT factor .)
    DOUBLE_MINUS    reduce using rule 87 (factor -> NOT factor .)
    DOUBLE_PLUS     reduce using rule 87 (factor -> NOT factor .)
    NE              reduce using rule 87 (factor -> NOT factor .)
    EQ              reduce using rule 87 (factor -> NOT factor .)
    GE              reduce using rule 87 (factor -> NOT factor .)
    GT              reduce using rule 87 (factor -> NOT factor .)
    LE              reduce using rule 87 (factor -> NOT factor .)
    LT              reduce using rule 87 (factor -> NOT factor .)
    MODULE          reduce using rule 87 (factor -> NOT factor .)
    DIVIDE          reduce using rule 87 (factor -> NOT factor .)
    TIMES           reduce using rule 87 (factor -> NOT factor .)
    MINUS           reduce using rule 87 (factor -> NOT factor .)
    PLUS            reduce using rule 87 (factor -> NOT factor .)
    AND             reduce using rule 87 (factor -> NOT factor .)
    OR              reduce using rule 87 (factor -> NOT factor .)
    ASSIGN          reduce using rule 87 (factor -> NOT factor .)
    MODEQ           reduce using rule 87 (factor -> NOT factor .)
    DIVEQ           reduce using rule 87 (factor -> NOT factor .)
    TIMESEQ         reduce using rule 87 (factor -> NOT factor .)
    LESSEQ          reduce using rule 87 (factor -> NOT factor .)
    ADDEQ           reduce using rule 87 (factor -> NOT factor .)
    RPAREN          reduce using rule 87 (factor -> NOT factor .)
    COMMA           reduce using rule 87 (factor -> NOT factor .)


state 95

    (94) factor -> SUPER POINT . IDENT
    IDENT           shift and go to state 138


state 96

    (20) var_declaration -> VAR IDENT _4_optional . SEMI
    SEMI            shift and go to state 139


state 97

    (21) _4_optional -> ASSIGN . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 140
    factor                         shift and go to state 35

state 98

    (104) function -> IDENT LPAREN . _14_optional RPAREN block
    (105) _14_optional -> . parameters
    (106) _14_optional -> .
    (107) parameters -> . IDENT _15_repeat
    RPAREN          reduce using rule 106 (_14_optional -> .)
    IDENT           shift and go to state 141

    _14_optional                   shift and go to state 142
    parameters                     shift and go to state 143

state 99

    (11) class_declaration -> CLASS IDENT _2_optional . LBRACE _3_repeat RBRACE
    LBRACE          shift and go to state 144


state 100

    (12) _2_optional -> LPAREN . LT IDENT RPAREN
    LT              shift and go to state 145


state 101

    (56) block -> LBRACE _12_repeat RBRACE .
    CONTINUE        reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    BREAK           reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    VAR             reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    FUN             reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    CLASS           reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    FORMAT          reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    LBRACE          reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    WHILE           reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    RETURN          reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    PRINT           reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    IF              reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    FOR             reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    DOUBLE_MINUS    reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    DOUBLE_PLUS     reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    MFUNC           reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    NOT             reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    MINUS           reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    LPAREN          reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    SUPER           reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    IDENT           reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    THIS            reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    NIL             reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    FALSE           reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    TRUE            reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    STRING          reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    NUM             reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    REAL            reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    $end            reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    RBRACE          reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    ELSE            reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)
    END_IF          reduce using rule 56 (block -> LBRACE _12_repeat RBRACE .)


state 102

    (59) _12_items -> _12_items _12_item .
    CONTINUE        reduce using rule 59 (_12_items -> _12_items _12_item .)
    BREAK           reduce using rule 59 (_12_items -> _12_items _12_item .)
    VAR             reduce using rule 59 (_12_items -> _12_items _12_item .)
    FUN             reduce using rule 59 (_12_items -> _12_items _12_item .)
    CLASS           reduce using rule 59 (_12_items -> _12_items _12_item .)
    FORMAT          reduce using rule 59 (_12_items -> _12_items _12_item .)
    LBRACE          reduce using rule 59 (_12_items -> _12_items _12_item .)
    WHILE           reduce using rule 59 (_12_items -> _12_items _12_item .)
    RETURN          reduce using rule 59 (_12_items -> _12_items _12_item .)
    PRINT           reduce using rule 59 (_12_items -> _12_items _12_item .)
    IF              reduce using rule 59 (_12_items -> _12_items _12_item .)
    FOR             reduce using rule 59 (_12_items -> _12_items _12_item .)
    DOUBLE_MINUS    reduce using rule 59 (_12_items -> _12_items _12_item .)
    DOUBLE_PLUS     reduce using rule 59 (_12_items -> _12_items _12_item .)
    MFUNC           reduce using rule 59 (_12_items -> _12_items _12_item .)
    NOT             reduce using rule 59 (_12_items -> _12_items _12_item .)
    MINUS           reduce using rule 59 (_12_items -> _12_items _12_item .)
    LPAREN          reduce using rule 59 (_12_items -> _12_items _12_item .)
    SUPER           reduce using rule 59 (_12_items -> _12_items _12_item .)
    IDENT           reduce using rule 59 (_12_items -> _12_items _12_item .)
    THIS            reduce using rule 59 (_12_items -> _12_items _12_item .)
    NIL             reduce using rule 59 (_12_items -> _12_items _12_item .)
    FALSE           reduce using rule 59 (_12_items -> _12_items _12_item .)
    TRUE            reduce using rule 59 (_12_items -> _12_items _12_item .)
    STRING          reduce using rule 59 (_12_items -> _12_items _12_item .)
    NUM             reduce using rule 59 (_12_items -> _12_items _12_item .)
    REAL            reduce using rule 59 (_12_items -> _12_items _12_item .)
    RBRACE          reduce using rule 59 (_12_items -> _12_items _12_item .)


state 103

    (103) format_stmt -> FORMAT LPAREN expression . RPAREN SEMI
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    RPAREN          shift and go to state 146
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 104

    (89) factor -> LPAREN expression RPAREN .
    LPAREN          reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    POINT           reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    DOUBLE_MINUS    reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    DOUBLE_PLUS     reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    MODULE          reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    ASSIGN          reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    MODEQ           reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    DIVEQ           reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    TIMESEQ         reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    LESSEQ          reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    ADDEQ           reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 89 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 89 (factor -> LPAREN expression RPAREN .)


state 105

    (67) expression -> expression NE expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 67 (expression -> expression NE expression .)
    NE              reduce using rule 67 (expression -> expression NE expression .)
    EQ              reduce using rule 67 (expression -> expression NE expression .)
    AND             reduce using rule 67 (expression -> expression NE expression .)
    OR              reduce using rule 67 (expression -> expression NE expression .)
    ASSIGN          reduce using rule 67 (expression -> expression NE expression .)
    MODEQ           reduce using rule 67 (expression -> expression NE expression .)
    DIVEQ           reduce using rule 67 (expression -> expression NE expression .)
    TIMESEQ         reduce using rule 67 (expression -> expression NE expression .)
    LESSEQ          reduce using rule 67 (expression -> expression NE expression .)
    ADDEQ           reduce using rule 67 (expression -> expression NE expression .)
    RPAREN          reduce using rule 67 (expression -> expression NE expression .)
    COMMA           reduce using rule 67 (expression -> expression NE expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73


state 106

    (68) expression -> expression EQ expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 68 (expression -> expression EQ expression .)
    NE              reduce using rule 68 (expression -> expression EQ expression .)
    EQ              reduce using rule 68 (expression -> expression EQ expression .)
    AND             reduce using rule 68 (expression -> expression EQ expression .)
    OR              reduce using rule 68 (expression -> expression EQ expression .)
    ASSIGN          reduce using rule 68 (expression -> expression EQ expression .)
    MODEQ           reduce using rule 68 (expression -> expression EQ expression .)
    DIVEQ           reduce using rule 68 (expression -> expression EQ expression .)
    TIMESEQ         reduce using rule 68 (expression -> expression EQ expression .)
    LESSEQ          reduce using rule 68 (expression -> expression EQ expression .)
    ADDEQ           reduce using rule 68 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 68 (expression -> expression EQ expression .)
    COMMA           reduce using rule 68 (expression -> expression EQ expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73


state 107

    (69) expression -> expression GE expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 69 (expression -> expression GE expression .)
    NE              reduce using rule 69 (expression -> expression GE expression .)
    EQ              reduce using rule 69 (expression -> expression GE expression .)
    GE              reduce using rule 69 (expression -> expression GE expression .)
    GT              reduce using rule 69 (expression -> expression GE expression .)
    LE              reduce using rule 69 (expression -> expression GE expression .)
    LT              reduce using rule 69 (expression -> expression GE expression .)
    AND             reduce using rule 69 (expression -> expression GE expression .)
    OR              reduce using rule 69 (expression -> expression GE expression .)
    ASSIGN          reduce using rule 69 (expression -> expression GE expression .)
    MODEQ           reduce using rule 69 (expression -> expression GE expression .)
    DIVEQ           reduce using rule 69 (expression -> expression GE expression .)
    TIMESEQ         reduce using rule 69 (expression -> expression GE expression .)
    LESSEQ          reduce using rule 69 (expression -> expression GE expression .)
    ADDEQ           reduce using rule 69 (expression -> expression GE expression .)
    RPAREN          reduce using rule 69 (expression -> expression GE expression .)
    COMMA           reduce using rule 69 (expression -> expression GE expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73


state 108

    (70) expression -> expression GT expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 70 (expression -> expression GT expression .)
    NE              reduce using rule 70 (expression -> expression GT expression .)
    EQ              reduce using rule 70 (expression -> expression GT expression .)
    GE              reduce using rule 70 (expression -> expression GT expression .)
    GT              reduce using rule 70 (expression -> expression GT expression .)
    LE              reduce using rule 70 (expression -> expression GT expression .)
    LT              reduce using rule 70 (expression -> expression GT expression .)
    AND             reduce using rule 70 (expression -> expression GT expression .)
    OR              reduce using rule 70 (expression -> expression GT expression .)
    ASSIGN          reduce using rule 70 (expression -> expression GT expression .)
    MODEQ           reduce using rule 70 (expression -> expression GT expression .)
    DIVEQ           reduce using rule 70 (expression -> expression GT expression .)
    TIMESEQ         reduce using rule 70 (expression -> expression GT expression .)
    LESSEQ          reduce using rule 70 (expression -> expression GT expression .)
    ADDEQ           reduce using rule 70 (expression -> expression GT expression .)
    RPAREN          reduce using rule 70 (expression -> expression GT expression .)
    COMMA           reduce using rule 70 (expression -> expression GT expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73


state 109

    (71) expression -> expression LE expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 71 (expression -> expression LE expression .)
    NE              reduce using rule 71 (expression -> expression LE expression .)
    EQ              reduce using rule 71 (expression -> expression LE expression .)
    GE              reduce using rule 71 (expression -> expression LE expression .)
    GT              reduce using rule 71 (expression -> expression LE expression .)
    LE              reduce using rule 71 (expression -> expression LE expression .)
    LT              reduce using rule 71 (expression -> expression LE expression .)
    AND             reduce using rule 71 (expression -> expression LE expression .)
    OR              reduce using rule 71 (expression -> expression LE expression .)
    ASSIGN          reduce using rule 71 (expression -> expression LE expression .)
    MODEQ           reduce using rule 71 (expression -> expression LE expression .)
    DIVEQ           reduce using rule 71 (expression -> expression LE expression .)
    TIMESEQ         reduce using rule 71 (expression -> expression LE expression .)
    LESSEQ          reduce using rule 71 (expression -> expression LE expression .)
    ADDEQ           reduce using rule 71 (expression -> expression LE expression .)
    RPAREN          reduce using rule 71 (expression -> expression LE expression .)
    COMMA           reduce using rule 71 (expression -> expression LE expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73


state 110

    (72) expression -> expression LT expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 72 (expression -> expression LT expression .)
    NE              reduce using rule 72 (expression -> expression LT expression .)
    EQ              reduce using rule 72 (expression -> expression LT expression .)
    GE              reduce using rule 72 (expression -> expression LT expression .)
    GT              reduce using rule 72 (expression -> expression LT expression .)
    LE              reduce using rule 72 (expression -> expression LT expression .)
    LT              reduce using rule 72 (expression -> expression LT expression .)
    AND             reduce using rule 72 (expression -> expression LT expression .)
    OR              reduce using rule 72 (expression -> expression LT expression .)
    ASSIGN          reduce using rule 72 (expression -> expression LT expression .)
    MODEQ           reduce using rule 72 (expression -> expression LT expression .)
    DIVEQ           reduce using rule 72 (expression -> expression LT expression .)
    TIMESEQ         reduce using rule 72 (expression -> expression LT expression .)
    LESSEQ          reduce using rule 72 (expression -> expression LT expression .)
    ADDEQ           reduce using rule 72 (expression -> expression LT expression .)
    RPAREN          reduce using rule 72 (expression -> expression LT expression .)
    COMMA           reduce using rule 72 (expression -> expression LT expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73


state 111

    (73) expression -> expression MODULE expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 73 (expression -> expression MODULE expression .)
    NE              reduce using rule 73 (expression -> expression MODULE expression .)
    EQ              reduce using rule 73 (expression -> expression MODULE expression .)
    GE              reduce using rule 73 (expression -> expression MODULE expression .)
    GT              reduce using rule 73 (expression -> expression MODULE expression .)
    LE              reduce using rule 73 (expression -> expression MODULE expression .)
    LT              reduce using rule 73 (expression -> expression MODULE expression .)
    MODULE          reduce using rule 73 (expression -> expression MODULE expression .)
    DIVIDE          reduce using rule 73 (expression -> expression MODULE expression .)
    TIMES           reduce using rule 73 (expression -> expression MODULE expression .)
    MINUS           reduce using rule 73 (expression -> expression MODULE expression .)
    PLUS            reduce using rule 73 (expression -> expression MODULE expression .)
    AND             reduce using rule 73 (expression -> expression MODULE expression .)
    OR              reduce using rule 73 (expression -> expression MODULE expression .)
    ASSIGN          reduce using rule 73 (expression -> expression MODULE expression .)
    MODEQ           reduce using rule 73 (expression -> expression MODULE expression .)
    DIVEQ           reduce using rule 73 (expression -> expression MODULE expression .)
    TIMESEQ         reduce using rule 73 (expression -> expression MODULE expression .)
    LESSEQ          reduce using rule 73 (expression -> expression MODULE expression .)
    ADDEQ           reduce using rule 73 (expression -> expression MODULE expression .)
    RPAREN          reduce using rule 73 (expression -> expression MODULE expression .)
    COMMA           reduce using rule 73 (expression -> expression MODULE expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62


state 112

    (74) expression -> expression DIVIDE expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 74 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 74 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 74 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 74 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 74 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 74 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 74 (expression -> expression DIVIDE expression .)
    MODULE          reduce using rule 74 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 74 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 74 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 74 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 74 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 74 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 74 (expression -> expression DIVIDE expression .)
    ASSIGN          reduce using rule 74 (expression -> expression DIVIDE expression .)
    MODEQ           reduce using rule 74 (expression -> expression DIVIDE expression .)
    DIVEQ           reduce using rule 74 (expression -> expression DIVIDE expression .)
    TIMESEQ         reduce using rule 74 (expression -> expression DIVIDE expression .)
    LESSEQ          reduce using rule 74 (expression -> expression DIVIDE expression .)
    ADDEQ           reduce using rule 74 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 74 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 74 (expression -> expression DIVIDE expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62


state 113

    (75) expression -> expression TIMES expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 75 (expression -> expression TIMES expression .)
    NE              reduce using rule 75 (expression -> expression TIMES expression .)
    EQ              reduce using rule 75 (expression -> expression TIMES expression .)
    GE              reduce using rule 75 (expression -> expression TIMES expression .)
    GT              reduce using rule 75 (expression -> expression TIMES expression .)
    LE              reduce using rule 75 (expression -> expression TIMES expression .)
    LT              reduce using rule 75 (expression -> expression TIMES expression .)
    MODULE          reduce using rule 75 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 75 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 75 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 75 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 75 (expression -> expression TIMES expression .)
    AND             reduce using rule 75 (expression -> expression TIMES expression .)
    OR              reduce using rule 75 (expression -> expression TIMES expression .)
    ASSIGN          reduce using rule 75 (expression -> expression TIMES expression .)
    MODEQ           reduce using rule 75 (expression -> expression TIMES expression .)
    DIVEQ           reduce using rule 75 (expression -> expression TIMES expression .)
    TIMESEQ         reduce using rule 75 (expression -> expression TIMES expression .)
    LESSEQ          reduce using rule 75 (expression -> expression TIMES expression .)
    ADDEQ           reduce using rule 75 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 75 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 75 (expression -> expression TIMES expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62


state 114

    (76) expression -> expression MINUS expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 76 (expression -> expression MINUS expression .)
    NE              reduce using rule 76 (expression -> expression MINUS expression .)
    EQ              reduce using rule 76 (expression -> expression MINUS expression .)
    GE              reduce using rule 76 (expression -> expression MINUS expression .)
    GT              reduce using rule 76 (expression -> expression MINUS expression .)
    LE              reduce using rule 76 (expression -> expression MINUS expression .)
    LT              reduce using rule 76 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 76 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 76 (expression -> expression MINUS expression .)
    AND             reduce using rule 76 (expression -> expression MINUS expression .)
    OR              reduce using rule 76 (expression -> expression MINUS expression .)
    ASSIGN          reduce using rule 76 (expression -> expression MINUS expression .)
    MODEQ           reduce using rule 76 (expression -> expression MINUS expression .)
    DIVEQ           reduce using rule 76 (expression -> expression MINUS expression .)
    TIMESEQ         reduce using rule 76 (expression -> expression MINUS expression .)
    LESSEQ          reduce using rule 76 (expression -> expression MINUS expression .)
    ADDEQ           reduce using rule 76 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 76 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 76 (expression -> expression MINUS expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71


state 115

    (77) expression -> expression PLUS expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 77 (expression -> expression PLUS expression .)
    NE              reduce using rule 77 (expression -> expression PLUS expression .)
    EQ              reduce using rule 77 (expression -> expression PLUS expression .)
    GE              reduce using rule 77 (expression -> expression PLUS expression .)
    GT              reduce using rule 77 (expression -> expression PLUS expression .)
    LE              reduce using rule 77 (expression -> expression PLUS expression .)
    LT              reduce using rule 77 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 77 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 77 (expression -> expression PLUS expression .)
    AND             reduce using rule 77 (expression -> expression PLUS expression .)
    OR              reduce using rule 77 (expression -> expression PLUS expression .)
    ASSIGN          reduce using rule 77 (expression -> expression PLUS expression .)
    MODEQ           reduce using rule 77 (expression -> expression PLUS expression .)
    DIVEQ           reduce using rule 77 (expression -> expression PLUS expression .)
    TIMESEQ         reduce using rule 77 (expression -> expression PLUS expression .)
    LESSEQ          reduce using rule 77 (expression -> expression PLUS expression .)
    ADDEQ           reduce using rule 77 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 77 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 77 (expression -> expression PLUS expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71


state 116

    (78) expression -> expression AND expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 78 (expression -> expression AND expression .)
    AND             reduce using rule 78 (expression -> expression AND expression .)
    OR              reduce using rule 78 (expression -> expression AND expression .)
    ASSIGN          reduce using rule 78 (expression -> expression AND expression .)
    MODEQ           reduce using rule 78 (expression -> expression AND expression .)
    DIVEQ           reduce using rule 78 (expression -> expression AND expression .)
    TIMESEQ         reduce using rule 78 (expression -> expression AND expression .)
    LESSEQ          reduce using rule 78 (expression -> expression AND expression .)
    ADDEQ           reduce using rule 78 (expression -> expression AND expression .)
    RPAREN          reduce using rule 78 (expression -> expression AND expression .)
    COMMA           reduce using rule 78 (expression -> expression AND expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73


state 117

    (79) expression -> expression OR expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 79 (expression -> expression OR expression .)
    OR              reduce using rule 79 (expression -> expression OR expression .)
    ASSIGN          reduce using rule 79 (expression -> expression OR expression .)
    MODEQ           reduce using rule 79 (expression -> expression OR expression .)
    DIVEQ           reduce using rule 79 (expression -> expression OR expression .)
    TIMESEQ         reduce using rule 79 (expression -> expression OR expression .)
    LESSEQ          reduce using rule 79 (expression -> expression OR expression .)
    ADDEQ           reduce using rule 79 (expression -> expression OR expression .)
    RPAREN          reduce using rule 79 (expression -> expression OR expression .)
    COMMA           reduce using rule 79 (expression -> expression OR expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74


state 118

    (80) expression -> expression ASSIGN expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 80 (expression -> expression ASSIGN expression .)
    RPAREN          reduce using rule 80 (expression -> expression ASSIGN expression .)
    COMMA           reduce using rule 80 (expression -> expression ASSIGN expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 119

    (81) expression -> expression MODEQ expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 81 (expression -> expression MODEQ expression .)
    RPAREN          reduce using rule 81 (expression -> expression MODEQ expression .)
    COMMA           reduce using rule 81 (expression -> expression MODEQ expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 120

    (82) expression -> expression DIVEQ expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 82 (expression -> expression DIVEQ expression .)
    RPAREN          reduce using rule 82 (expression -> expression DIVEQ expression .)
    COMMA           reduce using rule 82 (expression -> expression DIVEQ expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 121

    (83) expression -> expression TIMESEQ expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 83 (expression -> expression TIMESEQ expression .)
    RPAREN          reduce using rule 83 (expression -> expression TIMESEQ expression .)
    COMMA           reduce using rule 83 (expression -> expression TIMESEQ expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 122

    (84) expression -> expression LESSEQ expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 84 (expression -> expression LESSEQ expression .)
    RPAREN          reduce using rule 84 (expression -> expression LESSEQ expression .)
    COMMA           reduce using rule 84 (expression -> expression LESSEQ expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 123

    (85) expression -> expression ADDEQ expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 85 (expression -> expression ADDEQ expression .)
    RPAREN          reduce using rule 85 (expression -> expression ADDEQ expression .)
    COMMA           reduce using rule 85 (expression -> expression ADDEQ expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 124

    (55) while_stmt -> WHILE LPAREN expression . RPAREN statement
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    RPAREN          shift and go to state 147
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 125

    (52) return_stmt -> RETURN _11_optional SEMI .
    CONTINUE        reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    BREAK           reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    VAR             reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    FUN             reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    CLASS           reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    FORMAT          reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    LBRACE          reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    WHILE           reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    RETURN          reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    PRINT           reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    IF              reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    FOR             reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    DOUBLE_MINUS    reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    DOUBLE_PLUS     reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    MFUNC           reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    NOT             reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    MINUS           reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    LPAREN          reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    SUPER           reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    IDENT           reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    THIS            reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    NIL             reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    FALSE           reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    TRUE            reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    STRING          reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    NUM             reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    REAL            reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    $end            reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    RBRACE          reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    ELSE            reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)
    END_IF          reduce using rule 52 (return_stmt -> RETURN _11_optional SEMI .)


state 126

    (51) print_stmt -> PRINT LPAREN expression . RPAREN SEMI
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    RPAREN          shift and go to state 148
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 127

    (46) if_stmt -> IF LPAREN _9_optional . RPAREN statement _10_optional END_IF
    RPAREN          shift and go to state 149


state 128

    (47) _9_optional -> expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    RPAREN          reduce using rule 47 (_9_optional -> expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 129

    (34) for_stmt -> FOR LPAREN SEMI . _5_optional SEMI _6_optional RPAREN statement
    (35) _5_optional -> . expression
    (36) _5_optional -> .
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    SEMI            reduce using rule 36 (_5_optional -> .)
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    _5_optional                    shift and go to state 150
    expression                     shift and go to state 151
    factor                         shift and go to state 35

state 130

    (39) for_stmt -> FOR LPAREN for_initialize . _7_optional SEMI _8_optional RPAREN statement
    (40) _7_optional -> . expression
    (41) _7_optional -> .
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    SEMI            reduce using rule 41 (_7_optional -> .)
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    _7_optional                    shift and go to state 152
    expression                     shift and go to state 153
    factor                         shift and go to state 35

state 131

    (44) for_initialize -> expr_stmt .
    DOUBLE_MINUS    reduce using rule 44 (for_initialize -> expr_stmt .)
    DOUBLE_PLUS     reduce using rule 44 (for_initialize -> expr_stmt .)
    MFUNC           reduce using rule 44 (for_initialize -> expr_stmt .)
    NOT             reduce using rule 44 (for_initialize -> expr_stmt .)
    MINUS           reduce using rule 44 (for_initialize -> expr_stmt .)
    LPAREN          reduce using rule 44 (for_initialize -> expr_stmt .)
    SUPER           reduce using rule 44 (for_initialize -> expr_stmt .)
    IDENT           reduce using rule 44 (for_initialize -> expr_stmt .)
    THIS            reduce using rule 44 (for_initialize -> expr_stmt .)
    NIL             reduce using rule 44 (for_initialize -> expr_stmt .)
    FALSE           reduce using rule 44 (for_initialize -> expr_stmt .)
    TRUE            reduce using rule 44 (for_initialize -> expr_stmt .)
    STRING          reduce using rule 44 (for_initialize -> expr_stmt .)
    NUM             reduce using rule 44 (for_initialize -> expr_stmt .)
    REAL            reduce using rule 44 (for_initialize -> expr_stmt .)
    SEMI            reduce using rule 44 (for_initialize -> expr_stmt .)


state 132

    (45) for_initialize -> var_declaration .
    DOUBLE_MINUS    reduce using rule 45 (for_initialize -> var_declaration .)
    DOUBLE_PLUS     reduce using rule 45 (for_initialize -> var_declaration .)
    MFUNC           reduce using rule 45 (for_initialize -> var_declaration .)
    NOT             reduce using rule 45 (for_initialize -> var_declaration .)
    MINUS           reduce using rule 45 (for_initialize -> var_declaration .)
    LPAREN          reduce using rule 45 (for_initialize -> var_declaration .)
    SUPER           reduce using rule 45 (for_initialize -> var_declaration .)
    IDENT           reduce using rule 45 (for_initialize -> var_declaration .)
    THIS            reduce using rule 45 (for_initialize -> var_declaration .)
    NIL             reduce using rule 45 (for_initialize -> var_declaration .)
    FALSE           reduce using rule 45 (for_initialize -> var_declaration .)
    TRUE            reduce using rule 45 (for_initialize -> var_declaration .)
    STRING          reduce using rule 45 (for_initialize -> var_declaration .)
    NUM             reduce using rule 45 (for_initialize -> var_declaration .)
    REAL            reduce using rule 45 (for_initialize -> var_declaration .)
    SEMI            reduce using rule 45 (for_initialize -> var_declaration .)


state 133

    (90) factor -> factor LPAREN _13_optional . RPAREN
    RPAREN          shift and go to state 154


state 134

    (91) _13_optional -> arguments .
    RPAREN          reduce using rule 91 (_13_optional -> arguments .)


state 135

    (113) arguments -> expression . _16_repeat
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    (114) _16_repeat -> . _16_items
    (115) _16_repeat -> .
    (116) _16_items -> . _16_items _16_item
    (117) _16_items -> . _16_item
    (118) _16_item -> . COMMA expression
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81
    RPAREN          reduce using rule 115 (_16_repeat -> .)
    COMMA           shift and go to state 158

    _16_repeat                     shift and go to state 155
    _16_items                      shift and go to state 156
    _16_item                       shift and go to state 157

state 136

    (93) factor -> factor POINT IDENT .
    LPAREN          reduce using rule 93 (factor -> factor POINT IDENT .)
    POINT           reduce using rule 93 (factor -> factor POINT IDENT .)
    SEMI            reduce using rule 93 (factor -> factor POINT IDENT .)
    DOUBLE_MINUS    reduce using rule 93 (factor -> factor POINT IDENT .)
    DOUBLE_PLUS     reduce using rule 93 (factor -> factor POINT IDENT .)
    NE              reduce using rule 93 (factor -> factor POINT IDENT .)
    EQ              reduce using rule 93 (factor -> factor POINT IDENT .)
    GE              reduce using rule 93 (factor -> factor POINT IDENT .)
    GT              reduce using rule 93 (factor -> factor POINT IDENT .)
    LE              reduce using rule 93 (factor -> factor POINT IDENT .)
    LT              reduce using rule 93 (factor -> factor POINT IDENT .)
    MODULE          reduce using rule 93 (factor -> factor POINT IDENT .)
    DIVIDE          reduce using rule 93 (factor -> factor POINT IDENT .)
    TIMES           reduce using rule 93 (factor -> factor POINT IDENT .)
    MINUS           reduce using rule 93 (factor -> factor POINT IDENT .)
    PLUS            reduce using rule 93 (factor -> factor POINT IDENT .)
    AND             reduce using rule 93 (factor -> factor POINT IDENT .)
    OR              reduce using rule 93 (factor -> factor POINT IDENT .)
    ASSIGN          reduce using rule 93 (factor -> factor POINT IDENT .)
    MODEQ           reduce using rule 93 (factor -> factor POINT IDENT .)
    DIVEQ           reduce using rule 93 (factor -> factor POINT IDENT .)
    TIMESEQ         reduce using rule 93 (factor -> factor POINT IDENT .)
    LESSEQ          reduce using rule 93 (factor -> factor POINT IDENT .)
    ADDEQ           reduce using rule 93 (factor -> factor POINT IDENT .)
    RPAREN          reduce using rule 93 (factor -> factor POINT IDENT .)
    COMMA           reduce using rule 93 (factor -> factor POINT IDENT .)


state 137

    (86) factor -> MFUNC LPAREN expression . RPAREN SEMI
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    RPAREN          shift and go to state 159
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 138

    (94) factor -> SUPER POINT IDENT .
    LPAREN          reduce using rule 94 (factor -> SUPER POINT IDENT .)
    POINT           reduce using rule 94 (factor -> SUPER POINT IDENT .)
    SEMI            reduce using rule 94 (factor -> SUPER POINT IDENT .)
    DOUBLE_MINUS    reduce using rule 94 (factor -> SUPER POINT IDENT .)
    DOUBLE_PLUS     reduce using rule 94 (factor -> SUPER POINT IDENT .)
    NE              reduce using rule 94 (factor -> SUPER POINT IDENT .)
    EQ              reduce using rule 94 (factor -> SUPER POINT IDENT .)
    GE              reduce using rule 94 (factor -> SUPER POINT IDENT .)
    GT              reduce using rule 94 (factor -> SUPER POINT IDENT .)
    LE              reduce using rule 94 (factor -> SUPER POINT IDENT .)
    LT              reduce using rule 94 (factor -> SUPER POINT IDENT .)
    MODULE          reduce using rule 94 (factor -> SUPER POINT IDENT .)
    DIVIDE          reduce using rule 94 (factor -> SUPER POINT IDENT .)
    TIMES           reduce using rule 94 (factor -> SUPER POINT IDENT .)
    MINUS           reduce using rule 94 (factor -> SUPER POINT IDENT .)
    PLUS            reduce using rule 94 (factor -> SUPER POINT IDENT .)
    AND             reduce using rule 94 (factor -> SUPER POINT IDENT .)
    OR              reduce using rule 94 (factor -> SUPER POINT IDENT .)
    ASSIGN          reduce using rule 94 (factor -> SUPER POINT IDENT .)
    MODEQ           reduce using rule 94 (factor -> SUPER POINT IDENT .)
    DIVEQ           reduce using rule 94 (factor -> SUPER POINT IDENT .)
    TIMESEQ         reduce using rule 94 (factor -> SUPER POINT IDENT .)
    LESSEQ          reduce using rule 94 (factor -> SUPER POINT IDENT .)
    ADDEQ           reduce using rule 94 (factor -> SUPER POINT IDENT .)
    RPAREN          reduce using rule 94 (factor -> SUPER POINT IDENT .)
    COMMA           reduce using rule 94 (factor -> SUPER POINT IDENT .)


state 139

    (20) var_declaration -> VAR IDENT _4_optional SEMI .
    CONTINUE        reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    BREAK           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    VAR             reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    FUN             reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    CLASS           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    FORMAT          reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    LBRACE          reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    WHILE           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    RETURN          reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    PRINT           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    IF              reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    FOR             reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    DOUBLE_MINUS    reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    DOUBLE_PLUS     reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    MFUNC           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    NOT             reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    MINUS           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    LPAREN          reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    SUPER           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    IDENT           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    THIS            reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    NIL             reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    FALSE           reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    TRUE            reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    STRING          reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    NUM             reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    REAL            reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    $end            reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    RBRACE          reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)
    SEMI            reduce using rule 20 (var_declaration -> VAR IDENT _4_optional SEMI .)


state 140

    (21) _4_optional -> ASSIGN expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 21 (_4_optional -> ASSIGN expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 141

    (107) parameters -> IDENT . _15_repeat
    (108) _15_repeat -> . _15_items
    (109) _15_repeat -> .
    (110) _15_items -> . _15_items _15_item
    (111) _15_items -> . _15_item
    (112) _15_item -> . COMMA IDENT
    RPAREN          reduce using rule 109 (_15_repeat -> .)
    COMMA           shift and go to state 163

    _15_repeat                     shift and go to state 160
    _15_items                      shift and go to state 161
    _15_item                       shift and go to state 162

state 142

    (104) function -> IDENT LPAREN _14_optional . RPAREN block
    RPAREN          shift and go to state 164


state 143

    (105) _14_optional -> parameters .
    RPAREN          reduce using rule 105 (_14_optional -> parameters .)


state 144

    (11) class_declaration -> CLASS IDENT _2_optional LBRACE . _3_repeat RBRACE
    (14) _3_repeat -> . _3_items
    (15) _3_repeat -> .
    (16) _3_items -> . _3_items _3_item
    (17) _3_items -> . _3_item
    (18) _3_item -> . function
    (104) function -> . IDENT LPAREN _14_optional RPAREN block
    RBRACE          reduce using rule 15 (_3_repeat -> .)
    IDENT           shift and go to state 52

    _3_repeat                      shift and go to state 165
    _3_items                       shift and go to state 166
    _3_item                        shift and go to state 167
    function                       shift and go to state 168

state 145

    (12) _2_optional -> LPAREN LT . IDENT RPAREN
    IDENT           shift and go to state 169


state 146

    (103) format_stmt -> FORMAT LPAREN expression RPAREN . SEMI
    SEMI            shift and go to state 170


state 147

    (55) while_stmt -> WHILE LPAREN expression RPAREN . statement
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . BREAK SEMI
    (25) statement -> . format_stmt
    (26) statement -> . block
    (27) statement -> . while_stmt
    (28) statement -> . return_stmt
    (29) statement -> . print_stmt
    (30) statement -> . if_stmt
    (31) statement -> . for_stmt
    (32) statement -> . expr_stmt
    (103) format_stmt -> . FORMAT LPAREN expression RPAREN SEMI
    (56) block -> . LBRACE _12_repeat RBRACE
    (55) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (52) return_stmt -> . RETURN _11_optional SEMI
    (51) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (46) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional END_IF
    (34) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (39) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (33) expr_stmt -> . expression SEMI
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    FORMAT          shift and go to state 25
    LBRACE          shift and go to state 24
    WHILE           shift and go to state 28
    RETURN          shift and go to state 29
    PRINT           shift and go to state 30
    IF              shift and go to state 31
    FOR             shift and go to state 32
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 27
    statement                      shift and go to state 171
    format_stmt                    shift and go to state 12
    block                          shift and go to state 13
    while_stmt                     shift and go to state 14
    return_stmt                    shift and go to state 15
    print_stmt                     shift and go to state 16
    if_stmt                        shift and go to state 17
    for_stmt                       shift and go to state 18
    expr_stmt                      shift and go to state 19
    factor                         shift and go to state 35

state 148

    (51) print_stmt -> PRINT LPAREN expression RPAREN . SEMI
    SEMI            shift and go to state 172


state 149

    (46) if_stmt -> IF LPAREN _9_optional RPAREN . statement _10_optional END_IF
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . BREAK SEMI
    (25) statement -> . format_stmt
    (26) statement -> . block
    (27) statement -> . while_stmt
    (28) statement -> . return_stmt
    (29) statement -> . print_stmt
    (30) statement -> . if_stmt
    (31) statement -> . for_stmt
    (32) statement -> . expr_stmt
    (103) format_stmt -> . FORMAT LPAREN expression RPAREN SEMI
    (56) block -> . LBRACE _12_repeat RBRACE
    (55) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (52) return_stmt -> . RETURN _11_optional SEMI
    (51) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (46) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional END_IF
    (34) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (39) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (33) expr_stmt -> . expression SEMI
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    FORMAT          shift and go to state 25
    LBRACE          shift and go to state 24
    WHILE           shift and go to state 28
    RETURN          shift and go to state 29
    PRINT           shift and go to state 30
    IF              shift and go to state 31
    FOR             shift and go to state 32
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    statement                      shift and go to state 173
    format_stmt                    shift and go to state 12
    block                          shift and go to state 13
    while_stmt                     shift and go to state 14
    return_stmt                    shift and go to state 15
    print_stmt                     shift and go to state 16
    if_stmt                        shift and go to state 17
    for_stmt                       shift and go to state 18
    expr_stmt                      shift and go to state 19
    expression                     shift and go to state 27
    factor                         shift and go to state 35

state 150

    (34) for_stmt -> FOR LPAREN SEMI _5_optional . SEMI _6_optional RPAREN statement
    SEMI            shift and go to state 174


state 151

    (35) _5_optional -> expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 35 (_5_optional -> expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 152

    (39) for_stmt -> FOR LPAREN for_initialize _7_optional . SEMI _8_optional RPAREN statement
    SEMI            shift and go to state 175


state 153

    (40) _7_optional -> expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    SEMI            reduce using rule 40 (_7_optional -> expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 154

    (90) factor -> factor LPAREN _13_optional RPAREN .
    LPAREN          reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    POINT           reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    SEMI            reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    DOUBLE_MINUS    reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    DOUBLE_PLUS     reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    NE              reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    EQ              reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    GE              reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    GT              reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    LE              reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    LT              reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    MODULE          reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    DIVIDE          reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    TIMES           reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    MINUS           reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    PLUS            reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    AND             reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    OR              reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    ASSIGN          reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    MODEQ           reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    DIVEQ           reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    TIMESEQ         reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    LESSEQ          reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    ADDEQ           reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    RPAREN          reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)
    COMMA           reduce using rule 90 (factor -> factor LPAREN _13_optional RPAREN .)


state 155

    (113) arguments -> expression _16_repeat .
    RPAREN          reduce using rule 113 (arguments -> expression _16_repeat .)


state 156

    (114) _16_repeat -> _16_items .
    (116) _16_items -> _16_items . _16_item
    (118) _16_item -> . COMMA expression
    RPAREN          reduce using rule 114 (_16_repeat -> _16_items .)
    COMMA           shift and go to state 158

    _16_item                       shift and go to state 176

state 157

    (117) _16_items -> _16_item .
    COMMA           reduce using rule 117 (_16_items -> _16_item .)
    RPAREN          reduce using rule 117 (_16_items -> _16_item .)


state 158

    (118) _16_item -> COMMA . expression
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    expression                     shift and go to state 177
    factor                         shift and go to state 35

state 159

    (86) factor -> MFUNC LPAREN expression RPAREN . SEMI
    SEMI            shift and go to state 178


state 160

    (107) parameters -> IDENT _15_repeat .
    RPAREN          reduce using rule 107 (parameters -> IDENT _15_repeat .)


state 161

    (108) _15_repeat -> _15_items .
    (110) _15_items -> _15_items . _15_item
    (112) _15_item -> . COMMA IDENT
    RPAREN          reduce using rule 108 (_15_repeat -> _15_items .)
    COMMA           shift and go to state 163

    _15_item                       shift and go to state 179

state 162

    (111) _15_items -> _15_item .
    COMMA           reduce using rule 111 (_15_items -> _15_item .)
    RPAREN          reduce using rule 111 (_15_items -> _15_item .)


state 163

    (112) _15_item -> COMMA . IDENT
    IDENT           shift and go to state 180


state 164

    (104) function -> IDENT LPAREN _14_optional RPAREN . block
    (56) block -> . LBRACE _12_repeat RBRACE
    LBRACE          shift and go to state 24

    block                          shift and go to state 181

state 165

    (11) class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat . RBRACE
    RBRACE          shift and go to state 182


state 166

    (14) _3_repeat -> _3_items .
    (16) _3_items -> _3_items . _3_item
    (18) _3_item -> . function
    (104) function -> . IDENT LPAREN _14_optional RPAREN block
    RBRACE          reduce using rule 14 (_3_repeat -> _3_items .)
    IDENT           shift and go to state 52

    _3_item                        shift and go to state 183
    function                       shift and go to state 168

state 167

    (17) _3_items -> _3_item .
    IDENT           reduce using rule 17 (_3_items -> _3_item .)
    RBRACE          reduce using rule 17 (_3_items -> _3_item .)


state 168

    (18) _3_item -> function .
    IDENT           reduce using rule 18 (_3_item -> function .)
    RBRACE          reduce using rule 18 (_3_item -> function .)


state 169

    (12) _2_optional -> LPAREN LT IDENT . RPAREN
    RPAREN          shift and go to state 184


state 170

    (103) format_stmt -> FORMAT LPAREN expression RPAREN SEMI .
    CONTINUE        reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    BREAK           reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    VAR             reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    FUN             reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    CLASS           reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    FORMAT          reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    LBRACE          reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    DOUBLE_MINUS    reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    DOUBLE_PLUS     reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    MFUNC           reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    NOT             reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    SUPER           reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    IDENT           reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    THIS            reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    NIL             reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    STRING          reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    NUM             reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    REAL            reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    ELSE            reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)
    END_IF          reduce using rule 103 (format_stmt -> FORMAT LPAREN expression RPAREN SEMI .)


state 171

    (55) while_stmt -> WHILE LPAREN expression RPAREN statement .
    CONTINUE        reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    VAR             reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    FUN             reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    FORMAT          reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    PRINT           reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    DOUBLE_MINUS    reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    DOUBLE_PLUS     reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    MFUNC           reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    NOT             reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    SUPER           reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    IDENT           reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    THIS            reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    NIL             reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    STRING          reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    NUM             reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    REAL            reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)
    END_IF          reduce using rule 55 (while_stmt -> WHILE LPAREN expression RPAREN statement .)


state 172

    (51) print_stmt -> PRINT LPAREN expression RPAREN SEMI .
    CONTINUE        reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    BREAK           reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    VAR             reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    FUN             reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    CLASS           reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    FORMAT          reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    LBRACE          reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    DOUBLE_MINUS    reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    DOUBLE_PLUS     reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    MFUNC           reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    NOT             reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    SUPER           reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    IDENT           reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    THIS            reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    NIL             reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    STRING          reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    NUM             reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    REAL            reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    ELSE            reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)
    END_IF          reduce using rule 51 (print_stmt -> PRINT LPAREN expression RPAREN SEMI .)


state 173

    (46) if_stmt -> IF LPAREN _9_optional RPAREN statement . _10_optional END_IF
    (49) _10_optional -> . ELSE statement
    (50) _10_optional -> .
    ELSE            shift and go to state 186
    END_IF          reduce using rule 50 (_10_optional -> .)

    _10_optional                   shift and go to state 185

state 174

    (34) for_stmt -> FOR LPAREN SEMI _5_optional SEMI . _6_optional RPAREN statement
    (37) _6_optional -> . expression
    (38) _6_optional -> .
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    RPAREN          reduce using rule 38 (_6_optional -> .)
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    _6_optional                    shift and go to state 187
    expression                     shift and go to state 188
    factor                         shift and go to state 35

state 175

    (39) for_stmt -> FOR LPAREN for_initialize _7_optional SEMI . _8_optional RPAREN statement
    (42) _8_optional -> . expression
    (43) _8_optional -> .
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    RPAREN          reduce using rule 43 (_8_optional -> .)
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    _8_optional                    shift and go to state 189
    expression                     shift and go to state 190
    factor                         shift and go to state 35

state 176

    (116) _16_items -> _16_items _16_item .
    COMMA           reduce using rule 116 (_16_items -> _16_items _16_item .)
    RPAREN          reduce using rule 116 (_16_items -> _16_items _16_item .)


state 177

    (118) _16_item -> COMMA expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    COMMA           reduce using rule 118 (_16_item -> COMMA expression .)
    RPAREN          reduce using rule 118 (_16_item -> COMMA expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 178

    (86) factor -> MFUNC LPAREN expression RPAREN SEMI .
    LPAREN          reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    POINT           reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    SEMI            reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    DOUBLE_MINUS    reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    DOUBLE_PLUS     reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    NE              reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    EQ              reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    GE              reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    GT              reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    LE              reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    LT              reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    MODULE          reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    DIVIDE          reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    TIMES           reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    PLUS            reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    AND             reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    OR              reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    ASSIGN          reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    MODEQ           reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    DIVEQ           reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    TIMESEQ         reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    LESSEQ          reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    ADDEQ           reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    RPAREN          reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)
    COMMA           reduce using rule 86 (factor -> MFUNC LPAREN expression RPAREN SEMI .)


state 179

    (110) _15_items -> _15_items _15_item .
    COMMA           reduce using rule 110 (_15_items -> _15_items _15_item .)
    RPAREN          reduce using rule 110 (_15_items -> _15_items _15_item .)


state 180

    (112) _15_item -> COMMA IDENT .
    COMMA           reduce using rule 112 (_15_item -> COMMA IDENT .)
    RPAREN          reduce using rule 112 (_15_item -> COMMA IDENT .)


state 181

    (104) function -> IDENT LPAREN _14_optional RPAREN block .
    CONTINUE        reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    BREAK           reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    VAR             reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    FUN             reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    CLASS           reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    FORMAT          reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    LBRACE          reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    WHILE           reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    RETURN          reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    PRINT           reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    IF              reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    FOR             reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    DOUBLE_MINUS    reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    DOUBLE_PLUS     reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    MFUNC           reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    NOT             reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    MINUS           reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    LPAREN          reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    SUPER           reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    IDENT           reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    THIS            reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    NIL             reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    FALSE           reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    TRUE            reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    STRING          reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    NUM             reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    REAL            reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    $end            reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)
    RBRACE          reduce using rule 104 (function -> IDENT LPAREN _14_optional RPAREN block .)


state 182

    (11) class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .
    CONTINUE        reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    BREAK           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    VAR             reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    FUN             reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    CLASS           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    FORMAT          reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    LBRACE          reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    WHILE           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    RETURN          reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    PRINT           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    IF              reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    FOR             reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    DOUBLE_MINUS    reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    DOUBLE_PLUS     reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    MFUNC           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    NOT             reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    MINUS           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    LPAREN          reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    SUPER           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    IDENT           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    THIS            reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    NIL             reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    FALSE           reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    TRUE            reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    STRING          reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    NUM             reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    REAL            reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    $end            reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)
    RBRACE          reduce using rule 11 (class_declaration -> CLASS IDENT _2_optional LBRACE _3_repeat RBRACE .)


state 183

    (16) _3_items -> _3_items _3_item .
    IDENT           reduce using rule 16 (_3_items -> _3_items _3_item .)
    RBRACE          reduce using rule 16 (_3_items -> _3_items _3_item .)


state 184

    (12) _2_optional -> LPAREN LT IDENT RPAREN .
    LBRACE          reduce using rule 12 (_2_optional -> LPAREN LT IDENT RPAREN .)


state 185

    (46) if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional . END_IF
    END_IF          shift and go to state 191


state 186

    (49) _10_optional -> ELSE . statement
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . BREAK SEMI
    (25) statement -> . format_stmt
    (26) statement -> . block
    (27) statement -> . while_stmt
    (28) statement -> . return_stmt
    (29) statement -> . print_stmt
    (30) statement -> . if_stmt
    (31) statement -> . for_stmt
    (32) statement -> . expr_stmt
    (103) format_stmt -> . FORMAT LPAREN expression RPAREN SEMI
    (56) block -> . LBRACE _12_repeat RBRACE
    (55) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (52) return_stmt -> . RETURN _11_optional SEMI
    (51) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (46) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional END_IF
    (34) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (39) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (33) expr_stmt -> . expression SEMI
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    FORMAT          shift and go to state 25
    LBRACE          shift and go to state 24
    WHILE           shift and go to state 28
    RETURN          shift and go to state 29
    PRINT           shift and go to state 30
    IF              shift and go to state 31
    FOR             shift and go to state 32
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    statement                      shift and go to state 192
    format_stmt                    shift and go to state 12
    block                          shift and go to state 13
    while_stmt                     shift and go to state 14
    return_stmt                    shift and go to state 15
    print_stmt                     shift and go to state 16
    if_stmt                        shift and go to state 17
    for_stmt                       shift and go to state 18
    expr_stmt                      shift and go to state 19
    expression                     shift and go to state 27
    factor                         shift and go to state 35

state 187

    (34) for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional . RPAREN statement
    RPAREN          shift and go to state 193


state 188

    (37) _6_optional -> expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    RPAREN          reduce using rule 37 (_6_optional -> expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 189

    (39) for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional . RPAREN statement
    RPAREN          shift and go to state 194


state 190

    (42) _8_optional -> expression .
    (62) expression -> expression . DOUBLE_MINUS
    (63) expression -> expression . DOUBLE_PLUS
    (67) expression -> expression . NE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . GE expression
    (70) expression -> expression . GT expression
    (71) expression -> expression . LE expression
    (72) expression -> expression . LT expression
    (73) expression -> expression . MODULE expression
    (74) expression -> expression . DIVIDE expression
    (75) expression -> expression . TIMES expression
    (76) expression -> expression . MINUS expression
    (77) expression -> expression . PLUS expression
    (78) expression -> expression . AND expression
    (79) expression -> expression . OR expression
    (80) expression -> expression . ASSIGN expression
    (81) expression -> expression . MODEQ expression
    (82) expression -> expression . DIVEQ expression
    (83) expression -> expression . TIMESEQ expression
    (84) expression -> expression . LESSEQ expression
    (85) expression -> expression . ADDEQ expression
    RPAREN          reduce using rule 42 (_8_optional -> expression .)
    DOUBLE_MINUS    shift and go to state 61
    DOUBLE_PLUS     shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    GE              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    LT              shift and go to state 68
    MODULE          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    ASSIGN          shift and go to state 76
    MODEQ           shift and go to state 77
    DIVEQ           shift and go to state 78
    TIMESEQ         shift and go to state 79
    LESSEQ          shift and go to state 80
    ADDEQ           shift and go to state 81


state 191

    (46) if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .
    CONTINUE        reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    BREAK           reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    VAR             reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    FUN             reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    CLASS           reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    FORMAT          reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    LBRACE          reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    WHILE           reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    RETURN          reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    PRINT           reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    IF              reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    FOR             reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    DOUBLE_MINUS    reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    DOUBLE_PLUS     reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    MFUNC           reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    NOT             reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    MINUS           reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    LPAREN          reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    SUPER           reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    IDENT           reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    THIS            reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    NIL             reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    FALSE           reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    TRUE            reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    STRING          reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    NUM             reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    REAL            reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    $end            reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    RBRACE          reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    ELSE            reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)
    END_IF          reduce using rule 46 (if_stmt -> IF LPAREN _9_optional RPAREN statement _10_optional END_IF .)


state 192

    (49) _10_optional -> ELSE statement .
    END_IF          reduce using rule 49 (_10_optional -> ELSE statement .)


state 193

    (34) for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN . statement
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . BREAK SEMI
    (25) statement -> . format_stmt
    (26) statement -> . block
    (27) statement -> . while_stmt
    (28) statement -> . return_stmt
    (29) statement -> . print_stmt
    (30) statement -> . if_stmt
    (31) statement -> . for_stmt
    (32) statement -> . expr_stmt
    (103) format_stmt -> . FORMAT LPAREN expression RPAREN SEMI
    (56) block -> . LBRACE _12_repeat RBRACE
    (55) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (52) return_stmt -> . RETURN _11_optional SEMI
    (51) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (46) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional END_IF
    (34) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (39) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (33) expr_stmt -> . expression SEMI
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    FORMAT          shift and go to state 25
    LBRACE          shift and go to state 24
    WHILE           shift and go to state 28
    RETURN          shift and go to state 29
    PRINT           shift and go to state 30
    IF              shift and go to state 31
    FOR             shift and go to state 32
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    statement                      shift and go to state 195
    format_stmt                    shift and go to state 12
    block                          shift and go to state 13
    while_stmt                     shift and go to state 14
    return_stmt                    shift and go to state 15
    print_stmt                     shift and go to state 16
    if_stmt                        shift and go to state 17
    for_stmt                       shift and go to state 18
    expr_stmt                      shift and go to state 19
    expression                     shift and go to state 27
    factor                         shift and go to state 35

state 194

    (39) for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN . statement
    (23) statement -> . CONTINUE SEMI
    (24) statement -> . BREAK SEMI
    (25) statement -> . format_stmt
    (26) statement -> . block
    (27) statement -> . while_stmt
    (28) statement -> . return_stmt
    (29) statement -> . print_stmt
    (30) statement -> . if_stmt
    (31) statement -> . for_stmt
    (32) statement -> . expr_stmt
    (103) format_stmt -> . FORMAT LPAREN expression RPAREN SEMI
    (56) block -> . LBRACE _12_repeat RBRACE
    (55) while_stmt -> . WHILE LPAREN expression RPAREN statement
    (52) return_stmt -> . RETURN _11_optional SEMI
    (51) print_stmt -> . PRINT LPAREN expression RPAREN SEMI
    (46) if_stmt -> . IF LPAREN _9_optional RPAREN statement _10_optional END_IF
    (34) for_stmt -> . FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement
    (39) for_stmt -> . FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement
    (33) expr_stmt -> . expression SEMI
    (62) expression -> . expression DOUBLE_MINUS
    (63) expression -> . expression DOUBLE_PLUS
    (64) expression -> . DOUBLE_MINUS expression
    (65) expression -> . DOUBLE_PLUS expression
    (66) expression -> . factor
    (67) expression -> . expression NE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression GE expression
    (70) expression -> . expression GT expression
    (71) expression -> . expression LE expression
    (72) expression -> . expression LT expression
    (73) expression -> . expression MODULE expression
    (74) expression -> . expression DIVIDE expression
    (75) expression -> . expression TIMES expression
    (76) expression -> . expression MINUS expression
    (77) expression -> . expression PLUS expression
    (78) expression -> . expression AND expression
    (79) expression -> . expression OR expression
    (80) expression -> . expression ASSIGN expression
    (81) expression -> . expression MODEQ expression
    (82) expression -> . expression DIVEQ expression
    (83) expression -> . expression TIMESEQ expression
    (84) expression -> . expression LESSEQ expression
    (85) expression -> . expression ADDEQ expression
    (86) factor -> . MFUNC LPAREN expression RPAREN SEMI
    (87) factor -> . NOT factor
    (88) factor -> . MINUS factor
    (89) factor -> . LPAREN expression RPAREN
    (90) factor -> . factor LPAREN _13_optional RPAREN
    (93) factor -> . factor POINT IDENT
    (94) factor -> . SUPER POINT IDENT
    (95) factor -> . IDENT
    (96) factor -> . THIS
    (97) factor -> . NIL
    (98) factor -> . FALSE
    (99) factor -> . TRUE
    (100) factor -> . STRING
    (101) factor -> . NUM
    (102) factor -> . REAL
    CONTINUE        shift and go to state 10
    BREAK           shift and go to state 11
    FORMAT          shift and go to state 25
    LBRACE          shift and go to state 24
    WHILE           shift and go to state 28
    RETURN          shift and go to state 29
    PRINT           shift and go to state 30
    IF              shift and go to state 31
    FOR             shift and go to state 32
    DOUBLE_MINUS    shift and go to state 33
    DOUBLE_PLUS     shift and go to state 34
    MFUNC           shift and go to state 37
    NOT             shift and go to state 38
    MINUS           shift and go to state 36
    LPAREN          shift and go to state 26
    SUPER           shift and go to state 39
    IDENT           shift and go to state 21
    THIS            shift and go to state 40
    NIL             shift and go to state 41
    FALSE           shift and go to state 42
    TRUE            shift and go to state 43
    STRING          shift and go to state 44
    NUM             shift and go to state 45
    REAL            shift and go to state 46

    statement                      shift and go to state 196
    format_stmt                    shift and go to state 12
    block                          shift and go to state 13
    while_stmt                     shift and go to state 14
    return_stmt                    shift and go to state 15
    print_stmt                     shift and go to state 16
    if_stmt                        shift and go to state 17
    for_stmt                       shift and go to state 18
    expr_stmt                      shift and go to state 19
    expression                     shift and go to state 27
    factor                         shift and go to state 35

state 195

    (34) for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .
    CONTINUE        reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    BREAK           reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    VAR             reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    FUN             reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    CLASS           reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    FORMAT          reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    LBRACE          reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    WHILE           reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    RETURN          reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    PRINT           reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    IF              reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    FOR             reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    DOUBLE_MINUS    reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    DOUBLE_PLUS     reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    MFUNC           reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    NOT             reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    MINUS           reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    LPAREN          reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    SUPER           reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    IDENT           reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    THIS            reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    NIL             reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    FALSE           reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    TRUE            reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    STRING          reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    NUM             reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    REAL            reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    $end            reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    RBRACE          reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    ELSE            reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)
    END_IF          reduce using rule 34 (for_stmt -> FOR LPAREN SEMI _5_optional SEMI _6_optional RPAREN statement .)


state 196

    (39) for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .
    CONTINUE        reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    BREAK           reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    VAR             reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    FUN             reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    CLASS           reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    FORMAT          reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    LBRACE          reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    WHILE           reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    RETURN          reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    PRINT           reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    IF              reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    FOR             reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    DOUBLE_MINUS    reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    DOUBLE_PLUS     reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    MFUNC           reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    NOT             reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    MINUS           reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    LPAREN          reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    SUPER           reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    IDENT           reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    THIS            reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    NIL             reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    FALSE           reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    TRUE            reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    STRING          reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    NUM             reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    REAL            reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    $end            reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    RBRACE          reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    ELSE            reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
    END_IF          reduce using rule 39 (for_stmt -> FOR LPAREN for_initialize _7_optional SEMI _8_optional RPAREN statement .)
